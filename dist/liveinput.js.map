{"version":3,"sources":["liveinput.js"],"names":["liveinput","helper","rnd","Math","random","bind","Function","prototype","func","thisArg","slice","Array","args","call","arguments","apply","concat","extrude","filter","arr","cb","i","l","res","length","push","map","forEach","indexOf","v","except","target","remove","charToCode","c","charCodeAt","textToCodes","text","split","codesToText","codes","String","fromCharCode","undefined","addEvent","el","event","addEventListener","attachEvent","removeEvent","removeEventListener","detachEvent","guidchar","toString","guid","replace","format","arg","RegExp","fill","getSelectionStart","createTextRange","r","document","selection","createRange","duplicate","moveEnd","value","lastIndexOf","selectionStart","getSelectionEnd","moveStart","selectionEnd","setCaretPosition","pos","setSelectionRange","start","end","range","collapse","select","getOwnPropertyNames","obj","props","p","hasOwnProperty","isArray","Object","GUID","Cursor","self","this","max","press","release","change","maxpos","move","offset","refresh","langs","whitelist","additional","keyCodes","charCodes","hotkeymap","control",50,51,52,53,54,55,222,"parseCode","code","parseInt","keymapper","hotkey","command","layout","config","type","lang","ru","en","keyCode","relation",186,188,190,191,"special","convert","j","diff","index","added","others","k","exec","compute","data","keydown","converted","ctrlKey","splice","get","enabled","include","presets","preset","sources","chars","numbers","symbols","allowed","exclude","input","right","wrong","m","register","capslock","lower","upper","findhere","sequence","n","handler","result","shiftKey","regexulator","templates","after-chars-remove-chars","after-term-remove-chars","after-chars-remove-term","after-term-remove-term","before-chars-remove-chars","before-term-remove-chars","before-chars-remove-term","before-term-remove-term","after-char-remove-repeat","after-char-replace-expr","after-term-replace-expr","after-char-upper-char","[","]","\\","/","^","$",".","|","?","*","+","(",")","{","}","'","removes","interceptions","regexeRemoves","regexeInterceptions","mapping","char","val","join","term","template","name","flag","param","secondparam","expr","replacer","find","str","noffset","toLowerCase","toLocaleUpperCase","test","Error","sort","selector","parseArgs","cursor","before","Preprocessor","processes","pass","after","info","cfg","Postprocessor","LiveInput","eventindex","eventcount","interval","preprocessor","postprocessor","heap","callevents","events","onkeyup","e","ptr","substring","old","timer","clearTimeout","onkeydown","preventDefault","mousedown","setTimeout","paste","dragover","mouseup","mouseleave","blur","focus","unbind","on","off","setLang","mergeConfig","a","b","init","options","types","configuration","default","g","fio","numeric","place","peopled-place","address","month","passport-issue","international-passport-issue","international-document-serial","document-issue","module","exports","window"],"mappings":"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","file":"liveinput.js","sourcesContent":["\r\nvar liveinput = new function () {\r\n\tvar helper = (function() {\r\n\t\treturn new function() {\r\n\t\t\tvar rnd = Math.random;\r\n\t\t\tvar bind = Function.prototype.bind ? function (func, thisArg) {\r\n\t\t\t\treturn func.bind(thisArg);\r\n\t\t\t} : function (func, thisArg) {\r\n\t\t\t\tvar slice = Array.prototype.slice, args = slice.call(arguments, 2);\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\treturn func.apply(thisArg, args.concat(slice.call(arguments)));\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar extrude = function (thisArg) {\r\n\t\t\t\treturn bind(Function.prototype.call, thisArg);\r\n\t\t\t}\r\n\t\t\tvar filter = Array.prototype.filter ? extrude(Array.prototype.filter) : function (arr, cb) {\r\n\t\t\t\tvar res = [], i, l;\r\n\t\t\t\tfor (i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\t\tif (cb(arr[i], i, arr)) res.push(arr[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn res;\r\n\t\t\t};\r\n\t\t\tvar map = Array.prototype.map ? extrude(Array.prototype.map) : function (arr, cb) {\r\n\t\t\t\tvar res = [], i, l;\r\n\t\t\t\tfor (i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\t\tres.push(cb(arr[i], i, arr));\r\n\t\t\t\t}\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t\tvar forEach = Array.prototype.forEach ? extrude(Array.prototype.forEach) : function (arr, cb) {\r\n\t\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\t\tcb(arr[i], i, arr);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar indexOf = Array.prototype.indexOf ? extrude(Array.prototype.indexOf) : function (arr, v) {\r\n\t\t\t\tvar  i, l;\r\n\t\t\t\tfor (i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\t\tif (arr[i] == v) return i;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1;\r\n\t\t\t};\r\n\t\t\tvar except = function(target, remove) {\r\n\t\t\t\treturn filter(target, function(i) {\r\n\t\t\t\t\treturn indexOf(remove, i) == -1;\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tvar charToCode = function(c) {\r\n\t\t\t\treturn c.charCodeAt();\r\n\t\t\t};\r\n\t\t\tvar textToCodes = function(text) {\r\n\t\t\t\treturn map(text.split(''), charToCode);\r\n\t\t\t};\r\n\t\t\t//var codeToChar =  function(code) {\r\n\t\t\t//\treturn String.fromCharCode(code);\r\n\t\t\t//};\r\n\t\t\tvar codesToText = function (codes) {\r\n\t\t\t\treturn String.fromCharCode.apply(undefined, codes); //map(codes, codeToChar).join('');\r\n\t\t\t};\r\n\t\t\tvar addEvent = function(el, event, cb) {\r\n\t\t\t\tif (el.addEventListener) {\r\n\t\t\t\t\treturn el.addEventListener(event, cb, true);\r\n\t\t\t\t}\r\n\t\t\t\treturn el.attachEvent('on' + event, cb);\r\n\t\t\t}\r\n\t\t\tvar removeEvent = function(el, event, cb) {\r\n\t\t\t\tif (el.removeEventListener) {\r\n\t\t\t\t\treturn el.removeEventListener(event, cb, true);\r\n\t\t\t\t}\r\n\t\t\t\treturn el.detachEvent('on' + event, cb);\r\n\t\t\t}\r\n\t\t\tvar guidchar = function() {\r\n\t\t\t\treturn (rnd() * 16 | 0).toString(16);\r\n\t\t\t};\r\n\t\t\tvar guid = function() {\r\n\t\t\t\treturn 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'.replace(/x/g, guidchar);\r\n\t\t\t};\r\n\t\t\tvar format = function(text, arg) {\r\n\t\t\t\tfor (var i = 0, l = arg.length; i < l; i++) {\r\n\t\t\t\t\ttext = text.replace(new RegExp('\\\\{' + i + '\\\\}', 'g'), arg[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn text;\r\n\t\t\t};\r\n\t\t\tvar fill = function(l, cb) {\r\n\t\t\t\tvar res = [];\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tres.push(cb(i, l, res));\r\n\t\t\t\t}\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t\tvar getSelectionStart = function (el) {\r\n\t\t\t\tif (el.createTextRange) {\r\n\t\t\t\t\tvar r = document.selection.createRange().duplicate();\r\n\t\t\t\t\tr.moveEnd('character', el.value.length);\r\n\t\t\t\t\tif (r.text == '') return el.value.length;\r\n\t\t\t\t\treturn el.value.lastIndexOf(r.text);\r\n\t\t\t\t} else return el.selectionStart;\r\n\t\t\t};\r\n\t\t\tvar getSelectionEnd = function (el) {\r\n\t\t\t\tif (el.createTextRange) {\r\n\t\t\t\t\tvar r = document.selection.createRange().duplicate();\r\n\t\t\t\t\tr.moveStart('character', -el.value.length);\r\n\t\t\t\t\treturn r.text.length;\r\n\t\t\t\t} else return el.selectionEnd;\r\n\t\t\t};\r\n\t\t\tvar setCaretPosition = function (el, pos) {\r\n\t\t\t\t//el.focus();\r\n\t\t\t\tif (el.setSelectionRange)\r\n\t\t\t\t\treturn el.setSelectionRange(pos.start, pos.end);\r\n\t\t\t\tif (!el.createTextRange) return;\r\n\t\t\t\tvar range = el.createTextRange();\r\n\t\t\t\trange.collapse(true);\r\n\t\t\t\trange.moveStart('character', pos.start);\r\n\t\t\t\trange.moveEnd('character', pos.end);\r\n\t\t\t\trange.select();\r\n\t\t\t}\r\n\t\t\tvar getOwnPropertyNames = function(obj) {\r\n\t\t\t\tvar props = [];\r\n\t\t\t\tfor (var p in obj) if (obj.hasOwnProperty(p)) {\r\n\t\t\t\t\tprops.push(p);\r\n\t\t\t\t}\r\n\t\t\t\treturn props;\r\n\t\t\t}\r\n\t\t\tvar isArray = Array.isArray || function (arg) {\r\n\t\t\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tcharToCode: charToCode,\r\n\t\t\t\ttextToCodes: textToCodes,\r\n\t\t\t\t//codeToChar: codeToChar,\r\n\t\t\t\tcodesToText: codesToText,\r\n\t\t\t\taddEvent: addEvent,\r\n\t\t\t\tremoveEvent: removeEvent,\r\n\t\t\t\tGUID: guid,\r\n\t\t\t\tformat: format,\r\n\t\t\t\tfill: fill,\r\n\t\t\t\tgetSelectionStart: getSelectionStart,\r\n\t\t\t\tgetSelectionEnd: getSelectionEnd,\r\n\t\t\t\tsetCaretPosition: setCaretPosition,\r\n\t\t\t\tgetOwnPropertyNames: getOwnPropertyNames,\r\n\t\t\t\tbind: bind,\r\n\t\t\t\tfilter: filter,\r\n\t\t\t\tmap: map,\r\n\t\t\t\tforEach: forEach,\r\n\t\t\t\texcept: except,\r\n\t\t\t\tindexOf: indexOf,\r\n\t\t\t\tisArray: isArray\r\n\t\t\t};\r\n\t\t}\r\n\t})();\r\n\r\n\t// ReSharper disable once InconsistentNaming\r\n\tvar Cursor = function(el) {\r\n\t\tvar self = this;\r\n\r\n\t\tvar max = Math.max;\r\n\t\t//var min = Math.min;\r\n\r\n\t\t//var data = {};\r\n\r\n\t\tself.start = 0;\r\n\t\tself.end = 0;\r\n\r\n\t\tself.press = function () {\r\n\t\t\tself.end = self.start = helper.getSelectionStart(el);\r\n\t\t\t//console.log('press', self.start);\r\n\t\t\t//data.start = helper.getSelectionStart(el);\r\n\t\t\t//self.end = data.end = helper.getSelectionEnd(el);\r\n\t\t\t//self.text = data.text = el.value;\r\n\t\t\t//self.end = max(data.start, data.end);\r\n\t\t};\r\n\t\tself.release = function () {\r\n\t\t\tself.end = helper.getSelectionEnd(el);\r\n\t\t\t//console.log('release', self.end);\r\n\t\t\t//self.start = data.oldStart = data.start;\r\n\t\t\t//data.oldEnd = data.end;\r\n\t\t\t//data.oldText = data.text;\r\n\t\t\t//self.end = min(data.start, data.end);\r\n\t\t};\r\n\t\tself.change = function () {\r\n\t\t\tself.start = helper.getSelectionStart(el);\r\n\t\t\tself.end = helper.getSelectionEnd(el);\r\n\t\t\t//console.log('change', self.start, self.end);\r\n\t\t};\r\n\t\tvar maxpos;\r\n\t\tself.move = function (offset) {\r\n\t\t\t\r\n\t\t\t//self.start = data.start - offset;\r\n\t\t\t//self.end = self.start;\r\n\t\t\t\r\n\t\t\tmaxpos = max(self.start - offset, self.end - offset);\r\n\t\t\t//console.log('move', maxpos);\r\n\t\t\thelper.setCaretPosition(el, {\r\n\t\t\t\tstart: maxpos,\r\n\t\t\t\tend: maxpos\r\n\t\t\t});\r\n\t\t\tself.press();\r\n\t\t};\r\n\t\tself.refresh = function () {\r\n\t\t\thelper.setCaretPosition(el, {\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tend: el.value.length\r\n\t\t\t});\r\n\t\t\t//self.press();\r\n\t\t\t//self.release();\r\n\t\t\tself.change();\r\n\t\t\t//self.move(-el.value.length);\r\n\t\t\t//console.log('cursor refresh', self.start, self.end);\r\n\t\t\t//self.release();\r\n\t\t}\r\n\t\t//self.get = function() {\r\n\t\t//\treturn data;\r\n\t\t//};\r\n\r\n\t\treturn self;\r\n\t\t//http://javascript.nwbox.com/cursor_position/cursor.js\r\n\t\t// function getCaretPosition (el) {\r\n\t\t// el.focus ();\r\n\t\t// if (typeof el.selectionStart == 'number')\r\n\t\t// return { start: el.selectionStart, end: el.selectionEnd }\r\n\r\n\t\t// //http://stackoverflow.com/questions/4928586/get-caret-position-in-html-input\r\n\t\t// if (!document.selection) return;\r\n\t\t// var range = document.selection.createRange();\r\n\r\n\t\t// //var len = el.value.length\r\n\t\t// //range.moveStart ('character', -len);\r\n\t\t// //var start = range.text.length;\r\n\r\n\t\t// // Create a working TextRange that lives only in the input\r\n\t\t// var startRange = el.createTextRange();\r\n\t\t// startRange.moveToBookmark(range.getBookmark());\r\n\t\t// // Check if the start and end of the selection are at the very end\r\n\t\t// // of the input, since moveStart/moveEnd doesn't return what we want\r\n\t\t// // in those cases\r\n\t\t// var endRange = el.createTextRange();\r\n\t\t// endRange.collapse(false);\r\n\t\t// var start = 0;\r\n\t\t// var end = 0;\r\n\t\t// var len = el.value.length;\r\n\t\t// if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\r\n\t\t// start = end = len;\r\n\t\t// }\t\r\n\t\t// start = -startRange.moveStart(\"character\", -len);\r\n\t\t// var value = el.value.replace(/\\r\\n/g, '\\n');\r\n\t\t// start += value.slice(0, start).split(\"\\n\").length - 1;\r\n\t\t// end = -startRange.moveEnd(\"character\", -len);\r\n\t\t// end += value.slice(0, end).split(\"\\n\").length - 1;\r\n\t\t// return { start: start, end: end };\r\n\t\t// }\r\n\t};\r\n\r\n\t//var log = console.log.bind(console); //var forEach = Function.prototype.call.bind(Array.prototype.forEach); forEach([1, 2, 3], log);\r\n\t\r\n\t//TODO добавил язык - добавь во все комманды кейкоды языка\r\n\tvar langs = ['ru', 'en'];\r\n\tvar whitelist = [192, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 187, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 219, 221, 65, 83, 68, 70, 71, 72, 74, 75, 76, 186, 222, 220, 226, 90, 88, 67, 86, 66, 78, 77, 188, 190, 191, 111, 106, 109, 107, 12]; //, 8, 45, 36, 33, 35, 34, 37, 38, 39, 40\r\n\t//var blacklist = [27, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 104, 145, 19, 144, 9, 20, 16, 17, 91, 18, 92, 93, 45, 36, 33, 46, 35, 34, 37, 38, 39, 40];//, 8\r\n\tvar additional = {\r\n\t\t//space(32,32)/enter(13,10)/backspace(8)\r\n\t\tkeyCodes: [32, 13],//, 8\r\n\t\tcharCodes: [32, 10]\r\n\t}\r\n\t//char 10, 13 keyCode\r\n\twhitelist.push.apply(whitelist, additional.keyCodes);\r\n\t\r\n\tvar hotkeymap = {\r\n\t\tcontrol: {\r\n\t\t\t50: '@',\r\n\t\t\t51: '#',\r\n\t\t\t52: '$',\r\n\t\t\t53: '%',\r\n\t\t\t54: '^',\r\n\t\t\t55: '&',\r\n\t\t\t//56: '*',\r\n\t\t\t// ReSharper disable once StringLiteralWrongQuotes\r\n\t\t\t222: \"'\"\r\n\t\t}\r\n\t};\r\n\tvar parseCode = function(code) {\r\n\t\treturn parseInt(code, 10);\r\n\t}\r\n\tvar keymapper = function (map) {\r\n\t\t//console.log('keymapper', map);\r\n\t\tvar props = helper.getOwnPropertyNames(map);\r\n\t\t//console.log('keymapper', props);\r\n\t\treturn helper.map(props, parseCode);\r\n\t}\r\n\tvar hotkey = {\r\n\t\tcontrol: keymapper(hotkeymap.control)\r\n\t};\r\n\r\n\t//TODO разделить на комманды препроцессора и постпроцессорв\r\n\tvar command = {}\r\n\tcommand.layout = function(config, type) {\r\n\t\tvar self = this;\r\n\t\tself.type = type;\r\n\t\tvar lang = config.lang;\r\n\t\t\r\n\t\tvar map = {\r\n\t\t\tru: [1105, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1025, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1093, 1098, 92, 49, 51, 53, 56, 57, 48, 45, 61, 1061, 1066, 47, 33, 8470, 37, 42, 40, 41, 95, 43],//[]{} 192,91,221,123\r\n\t\t\ten: [96, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 97, 115, 100, 102, 103, 104, 106, 107, 108, 122, 120, 99, 118, 98, 110, 109, 126, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 65, 83, 68, 70, 71, 72, 74, 75, 76, 90, 88, 67, 86, 66, 78, 77, 91, 93, 92, 49, 51, 53, 56, 57, 48, 45, 61, 123, 125, 124, 33, 35, 37, 42, 40, 41, 95, 43]\r\n\t\t};\r\n\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\tfor (var p in map) {\r\n\t\t\tmap[p].push.apply(map[p], additional.charCodes);\r\n\t\t}\r\n\t\t//[];',.\r\n\t\t//[1093, 1098, 59, 39, 44, 46]\r\n\t\t//[219, 221, 186, 222, 188, 190]\r\n\t\tvar relation = {\r\n\t\t\t//2\r\n\t\t\t50: [\r\n\t\t\t\t[50, 34], //ru\r\n\t\t\t\t[50, 64] //en\r\n\t\t\t],\r\n\t\t\t//51: [\r\n\t\t\t//\t[51, 8470], //ru\r\n\t\t\t//\t[51, 35] //en\r\n\t\t\t//],\r\n\t\t\t//4\r\n\t\t\t52: [\r\n\t\t\t\t[52, 59],\r\n\t\t\t\t[52, 36]\r\n\t\t\t],\r\n\t\t\t//6\r\n\t\t\t54: [\r\n\t\t\t\t[54, 58],\r\n\t\t\t\t[54, 94]\r\n\t\t\t],\r\n\t\t\t//7\r\n\t\t\t55: [\r\n\t\t\t\t[55, 63],\r\n\t\t\t\t[55, 38]\r\n\t\t\t],\r\n\t\t\t//ж\r\n\t\t\t186: [\r\n\t\t\t\t[1078, 1046],\r\n\t\t\t\t[59, 58]\r\n\t\t\t],\r\n\t\t\t//э\r\n\t\t\t222: [\r\n\t\t\t\t[1101, 1069],\r\n\t\t\t\t[39, 34]\r\n\t\t\t],\r\n\t\t\t//б\r\n\t\t\t188: [\r\n\t\t\t\t[1073, 1041],\r\n\t\t\t\t[44, 60]\r\n\t\t\t],\r\n\t\t\t//ю\r\n\t\t\t190: [\r\n\t\t\t\t[1102, 1070],\r\n\t\t\t\t[46, 62]\r\n\t\t\t],\r\n\t\t\t//.\r\n\t\t\t191: [\r\n\t\t\t\t[46, 44],\r\n\t\t\t\t[47, 63]\r\n\t\t\t]\r\n\t\t};\r\n\t\tvar special = {\r\n\t\t\t50: 64,//@\r\n\t\t\t51: 35,//#\r\n\t\t\t52: 36,//$\r\n\t\t\t53: 37,//%\r\n\t\t\t54: 94,//^\r\n\t\t\t222: 39//'\r\n\t\t}\r\n\r\n\t\tvar convert = {};\r\n\t\tvar keyCode, i, l;\r\n\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\tfor (keyCode in relation) {\r\n\t\t\tconvert[keyCode] = {};\r\n\t\t}\r\n\t\tfor (i = 0, l = langs.length; i < l; i++) {\r\n\t\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\t\tfor (keyCode in relation) {\r\n\t\t\t\tconvert[keyCode][langs[i]] = relation[keyCode][i];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(convert);\r\n\r\n\t\tvar others = lang ? helper.except(langs, [lang]) : langs;\r\n\t\tvar j, k = others.length, diff, code, index, added, length;\r\n\r\n\t\tself.exec = function(compute, data) { //debugger\r\n\t\t\t//copypast\r\n\t\t\tif (!data.keydown.length) return compute;\r\n\t\t\tdiff = compute.diff;\r\n\t\t\tlength = diff.length;\r\n\t\t\tvar converted = [];\r\n\t\t\tfor (i = 0, l = diff.length; i < l; i++) {\r\n\t\t\t\tcode = diff[i];\r\n\t\t\t\tadded = false;\r\n\t\t\t\t//map\r\n\t\t\t\tindex = helper.indexOf(map[lang], code);\r\n\t\t\t\tif (index != -1) {\r\n\t\t\t\t\tconverted.push(code);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor (j = 0; j < k; j++) {\r\n\t\t\t\t\tindex = helper.indexOf(map[others[j]], code);\r\n\t\t\t\t\tif (index == -1) continue;\r\n\t\t\t\t\tconverted.push(map[lang][index]);\r\n\t\t\t\t\tadded = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (added) continue;\r\n\t\t\t\t//special\r\n\t\t\t\tif (data.keydown[i].ctrlKey && special[data.keydown[i].keyCode] == code) {\r\n\t\t\t\t\tconverted.push(code);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t//convert\r\n\t\t\t\tif (!convert[data.keydown[i].keyCode]) break;\r\n\t\t\t\tindex = helper.indexOf(convert[data.keydown[i].keyCode][lang], code);\r\n\t\t\t\tif (index != -1) {\r\n\t\t\t\t\tconverted.push(code);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor (j = 0; j < k; j++) {\r\n\t\t\t\t\tindex = helper.indexOf(convert[data.keydown[i].keyCode][others[j]], code);\r\n\t\t\t\t\tif (index == -1) continue;\r\n\t\t\t\t\tconverted.push(convert[data.keydown[i].keyCode][lang][index]);\r\n\t\t\t\t\tadded = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (added) continue;\r\n\t\t\t\tdata.keydown.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tcompute.diff = converted;\r\n\t\t\tcompute.offset += length - compute.diff.length;\r\n\t\t\treturn compute;\r\n\t\t};\r\n\t\tself.get = function() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: type,\r\n\t\t\t\tenabled: config.lang ? true : false,\r\n\t\t\t\tconfig: config\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn self;\r\n\t};\r\n\tcommand.include = function(config, type) {\r\n\t\tvar self = this;\r\n\t\tself.type = type;\r\n\t\tvar lang = config.lang || '';\r\n\t\tvar presets = [];\r\n\r\n\t\thelper.forEach(['numbers', 'symbols'], function(preset) {\r\n\t\t\tif (!config[preset]) return;\r\n\t\t\tpresets.push(preset);\r\n\t\t});\r\n\r\n\t\tvar special = config.special || '';\r\n\t\tvar i, l, index;\r\n\t\tvar sources = lang ? [lang] : langs;\r\n\r\n\t\tfor (i = 0, l = sources.length; i < l; i++) {\r\n\t\t\tindex = helper.indexOf(presets, sources[i]);\r\n\t\t\tif (index != -1) continue;\r\n\t\t\tpresets.push(sources[i]);\r\n\t\t}\r\n\r\n\t\tspecial = helper.textToCodes(special);\r\n\t\tif (special.length && helper.indexOf(presets, 'special') == -1) presets.push('special');\r\n\r\n\t\tif (!config.chars) {\r\n\t\t\thelper.forEach(langs, function(l) {\r\n\t\t\t\tindex = helper.indexOf(presets, l);\r\n\t\t\t\tif (index == -1) return;\r\n\t\t\t\tpresets.splice(index, 1);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tvar map = {\r\n\t\t\tru: [\r\n\t\t\t\t1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1093, 1098, 1078, 1101, 1073, 1102, 1105, //low\r\n\t\t\t\t1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1061, 1066, 1046, 1069, 1041, 1070, 1025 // up\r\n\t\t\t],\r\n\t\t\ten: [\r\n\t\t\t\t97, 115, 100, 102, 103, 104, 106, 107, 108, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 122, 120, 99, 118, 98, 110, 109,\r\n\t\t\t\t65, 83, 68, 70, 71, 72, 74, 75, 76, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 90, 88, 67, 86, 66, 78, 77\r\n\t\t\t],\r\n\t\t\tnumbers: [\r\n\t\t\t\t48, 49, 50, 51, 52, 53, 54, 55, 56, 57\r\n\t\t\t],\r\n\t\t\tsymbols: [\r\n\t\t\t\t32, 10, 96, 45, 61, 126, 33, 64, 35, 36, 37, 94, 38, 42, 40, 41, 95, 43, 91, 93, 59, 39, 92, 44, 46, 47, 123, 125, 58, 34, 124, 60, 62, 63, 8470\r\n\t\t\t],\r\n\t\t\tspecial: special\r\n\t\t};\r\n\r\n\t\t//for (i = 0, l = langs.length; i < l; i++) {\r\n\t\t//\tmap[langs[i]].push.apply(map[langs[i]], additional.charCodes);\r\n\t\t//}\r\n\r\n\t\tvar j, k = presets.length, diff, length, added;\r\n\r\n\t\tself.exec = function(compute, data) {\r\n\t\t\t//if (data.hotkey) return compute;\r\n\t\t\tdiff = compute.diff;\r\n\t\t\tlength = diff.length;\r\n\t\t\tvar allowed = [];\r\n\t\t\tfor (i = 0, l = diff.length; i < l; i++) {\r\n\t\t\t\tadded = false;\r\n\t\t\t\tfor (j = 0; j < k; j++) {\r\n\t\t\t\t\tindex = helper.indexOf(map[presets[j]], diff[i]);\r\n\t\t\t\t\tif (index == -1) continue;\r\n\t\t\t\t\tallowed.push(diff[i]);\r\n\t\t\t\t\tadded = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (added) continue;\r\n\t\t\t\tdata.keydown.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tcompute.diff = allowed;\r\n\t\t\tcompute.offset += length - compute.diff.length;\r\n\t\t\treturn compute;\r\n\t\t};\r\n\t\tself.get = function() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: type,\r\n\t\t\t\tenabled: (presets.length || special.length) ? true : false,\r\n\t\t\t\tconfig: config\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn self;\r\n\t};\r\n\tcommand.exclude = function(config, type) {\r\n\t\tdelete config.lang;\r\n\t\tvar self = this;\r\n\t\tself.type = type;\r\n\t\tvar special = config.special || '';\r\n\t\tspecial = helper.textToCodes(special);\r\n\t\tvar i, l, index, diff, length;\r\n\t\tself.exec = function(compute, data) {\r\n\t\t\tdiff = compute.diff;\r\n\t\t\tlength = diff.length;\r\n\t\t\tvar allowed = [];\r\n\t\t\tfor (i = 0, l = diff.length; i < l; i++) {\r\n\t\t\t\tindex = helper.indexOf(special, diff[i]);\r\n\t\t\t\tif (index == -1) allowed.push(diff[i]);\r\n\t\t\t}\r\n\t\t\tcompute.diff = allowed;\r\n\t\t\tcompute.offset += length - compute.diff.length;\r\n\t\t\treturn compute;\r\n\t\t};\r\n\t\tself.get = function() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: type,\r\n\t\t\t\tenabled: special.length ? true : false,\r\n\t\t\t\tconfig: config\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn self;\r\n\t};\r\n\tcommand.input = function (config, type) {\r\n\t\tvar self = this;\r\n\t\tself.type = type;\r\n\t\tvar lang = config.lang;\r\n\t\tvar register = config.register;\r\n\t\tvar capslock = config.capslock;\r\n\t\tvar map = {\r\n\t\t\tru: {\r\n\t\t\t\tlower: [1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1078, 1101, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1093, 1098, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1073, 1102, 1105],\r\n\t\t\t\tupper: [1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1046, 1069, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1061, 1066, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1041, 1070, 1025]\r\n\t\t\t},\r\n\t\t\ten: {\r\n\t\t\t\tlower: [97, 115, 100, 102, 103, 104, 106, 107, 108, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 122, 120, 99, 118, 98, 110, 109],\r\n\t\t\t\tupper: [65, 83, 68, 70, 71, 72, 74, 75, 76, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 90, 88, 67, 86, 66, 78, 77]\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar sources = lang ? [lang] : langs;\r\n\t\tvar findhere = helper.except(helper.getOwnPropertyNames(map[sources[0]]), [register])[0];\r\n\t\tvar sequence = ['register', 'capslock'];\r\n\t\tvar i, l, j, k = sources.length, index, diff, added, right, wrong, length, m, n = sequence.length;\t\t\r\n\r\n\t\tvar handler = {};\r\n\t\thandler.register = function (compute, data) {\r\n\t\t\t//if (data.hotkey) return compute;//  || data.copypast?\r\n\t\t\tdiff = compute.diff;\r\n\t\t\tlength = diff.length;\r\n\t\t\tvar result = [];\r\n\t\t\tfor (i = 0, l = diff.length; i < l; i++) {\r\n\t\t\t\tadded = false;\r\n\t\t\t\tfor (j = 0; j < k; j++) {\r\n\t\t\t\t\tindex = helper.indexOf(map[sources[j]][findhere], diff[i]);\r\n\t\t\t\t\tif (index == -1) continue;\r\n\t\t\t\t\tresult.push(map[sources[j]][register][index]);\r\n\t\t\t\t\tadded = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (added) continue;\r\n\t\t\t\tresult.push(diff[i]);\r\n\t\t\t}\r\n\t\t\tcompute.diff = result;\r\n\t\t\tcompute.offset += length - compute.diff.length;\r\n\t\t\treturn compute;\r\n\t\t}\r\n\t\thandler.capslock = function (compute, data) {\r\n\t\t\tif (!data.keydown.length) return compute;//?//data.copypast || \r\n\t\t\tdiff = compute.diff;\r\n\t\t\tlength = diff.length;\r\n\t\t\tvar result = [];\r\n\t\t\tfor (i = 0, l = diff.length; i < l; i++) {\r\n\t\t\t\tadded = false;\r\n\t\t\t\tright = register || (data.keydown[i].shiftKey ? 'upper' : 'lower');\r\n\t\t\t\tif (register && data.keydown[i].shiftKey) {\r\n\t\t\t\t\tright = right == 'upper' ? 'lower' : 'upper';\r\n\t\t\t\t}\r\n\t\t\t\twrong = right == 'upper' ? 'lower' : 'upper';\r\n\t\t\t\tfor (j = 0; j < k; j++) {\r\n\t\t\t\t\tindex = helper.indexOf(map[sources[j]][right], diff[i]);\r\n\t\t\t\t\tif (index != -1) continue;;\r\n\t\t\t\t\tindex = helper.indexOf(map[sources[j]][wrong], diff[i]);\r\n\t\t\t\t\tif (index == -1) continue;\r\n\t\t\t\t\tresult.push(map[sources[j]][right][index]);\r\n\t\t\t\t\tadded = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (added) continue;\r\n\t\t\t\tresult.push(diff[i]);\r\n\t\t\t}\r\n\t\t\tcompute.diff = result;\r\n\t\t\tcompute.offset += length - compute.diff.length;\r\n\t\t\treturn compute;\r\n\t\t}\r\n\r\n\t\tself.exec = function (compute, data) {\r\n\t\t\tvar result = compute;\r\n\t\t\tfor (m = 0; m < n; m++) {\r\n\t\t\t\tif (!config[sequence[m]]) continue;\r\n\t\t\t\tresult = handler[sequence[m]](result, data);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tself.get = function() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: type,\r\n\t\t\t\tenabled: (register || capslock) ? true : false,\r\n\t\t\t\tconfig: config\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn self;\r\n\t};\r\n\tcommand.regexulator = function(config, type) {\r\n\t\tvar self = this;\r\n\t\tself.type = type;\r\n\t\tdelete config.lang;\r\n\t\tvar templates = {\r\n\t\t\t//TODO после term может быть ., ещё что то?\r\n\t\t\t'after-chars-remove-chars': '((?:{0})+)(?:{1})+',\r\n\t\t\t'after-term-remove-chars': '((?:^|\\\\s)+{0}\\\\s+)(?:{1})+',\r\n\t\t\t'after-chars-remove-term': '((?:{0})+)\\\\s+{1}\\\\s+',\r\n\t\t\t'after-term-remove-term': '((?:^|\\\\s)+{0}\\\\s+){1}\\\\s+', //поидее на конце должно быть (?:$|\\\\s)+\r\n\r\n\t\t\t'before-chars-remove-chars': '(?:{1})+((?:{0})+)',\r\n\t\t\t'before-term-remove-chars': '(?:{1})+(\\\\s+{0}\\\\s+)', //поидее на конце должно быть (?:$|\\\\s)+\r\n\t\t\t'before-chars-remove-term': '(?:^|\\\\s)+{1}\\\\s+((?:{0})+)',\r\n\t\t\t'before-term-remove-term': '(?:^|\\\\s)+{1}\\\\s+({0}\\\\s+)', //поидее на конце должно быть (?:$|\\\\s)+\r\n\r\n\t\t\t'after-char-remove-repeat': '({0}){1}+',\r\n\t\t\t'after-char-replace-expr': '({0}{1})',\r\n\t\t\t'after-term-replace-expr': '(?:^|\\\\s)+({0}\\\\s+{1})',\r\n\t\t\t'after-char-upper-char': '({0}[a-zа-яё])'\r\n\t\t}\r\n\r\n\t\tvar map = {\r\n\t\t\t'[': '\\\\\\[',\r\n\t\t\t']': '\\\\\\]',\r\n\t\t\t'\\\\': '\\\\\\\\',\r\n\t\t\t'/': '\\\\\\/',\r\n\t\t\t'^': '\\\\\\^',\r\n\t\t\t'$': '\\\\\\$',\r\n\t\t\t'.': '\\\\\\.',\r\n\t\t\t'|': '\\\\\\|',\r\n\t\t\t'?': '\\\\\\?',\r\n\t\t\t'*': '\\\\\\*',\r\n\t\t\t'+': '\\\\\\+',\r\n\t\t\t'(': '\\\\\\(',\r\n\t\t\t')': '\\\\\\)',\r\n\t\t\t'{': '\\\\\\{',\r\n\t\t\t'}': '\\\\\\}',\r\n\t\t\t'\\'': '\\\\\\'',\r\n\t\t\t'': '^'\r\n\t\t}\r\n\t\tvar removes = {}, interceptions = {}, regexeRemoves = [], regexeInterceptions =[], i, l, m, n;\r\n\r\n\t\tvar mapping = function (c) { return map[c] || c; };\r\n\t\tvar char = function (text) {\r\n\t\t\tvar chars = text.split('');\r\n\t\t\tif (!chars.length) {\r\n\t\t\t\tchars.push('');\r\n\t\t\t}\r\n\t\t\treturn helper.map(chars, mapping);\r\n\t\t}\r\n\t\tvar chars = function (val) {\r\n\t\t\treturn [char(val).join('|')];\r\n\t\t}\r\n\t\tvar term = function (val) {\r\n\t\t\treturn [char(val).join('')];\r\n\t\t}\r\n\t\tvar template = function (name, arr) {\r\n\t\t\treturn helper.format(templates[name], arr);\r\n\t\t}\r\n\r\n\t\tvar handler = {};\r\n\t\thandler['after-chars-remove-chars'] = function (config, name, flag) {\r\n\t\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\t\tfor (var text in config) {\r\n\t\t\t\thelper.forEach(chars(text), function (param) {\r\n\t\t\t\t\thelper.forEach(chars(config[text]), function (secondparam) {\r\n\t\t\t\t\t\tremoves[flag].push(template(name, [param, secondparam]));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\thandler['after-chars-remove-term'] = function (config, name, flag) {\r\n\t\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\t\tfor (var text in config) {\r\n\t\t\t\thelper.forEach(chars(text), function (param) {\r\n\t\t\t\t\thelper.forEach(term(config[text]), function (secondparam) {\r\n\t\t\t\t\t\tremoves[flag].push(template(name, [param, secondparam]));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\thandler['after-term-remove-chars'] = function (config, name, flag) {\r\n\t\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\t\tfor (var text in config) {\r\n\t\t\t\thelper.forEach(term(text), function (param) {\r\n\t\t\t\t\thelper.forEach(chars(config[text]), function (secondparam) {\r\n\t\t\t\t\t\tremoves[flag].push(template(name, [param, secondparam]));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\thandler['after-term-remove-term'] = function (config, name, flag) {\r\n\t\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\t\tfor (var text in config) {\r\n\t\t\t\thelper.forEach(term(text), function (param) {\r\n\t\t\t\t\thelper.forEach(term(config[text]), function (secondparam) {\r\n\t\t\t\t\t\tremoves[flag].push(template(name, [param, secondparam]));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\thandler['after-char-remove-repeat'] = function (config, name, flag) {\r\n\t\t\thelper.forEach(char(config),function (param) {\r\n\t\t\t\tremoves[flag].push(template(name, [param, param]));\r\n\t\t\t});\r\n\t\t};\r\n\t\thandler['before-chars-remove-chars'] = handler['after-chars-remove-chars'];\r\n\t\thandler['before-chars-remove-term'] = handler['after-chars-remove-term'];\r\n\t\thandler['before-term-remove-chars'] = handler['after-term-remove-chars'];\r\n\t\thandler['before-term-remove-term'] = handler['after-term-remove-term'];\r\n\t\thandler['after-char-replace-expr'] = function (config, name, flag) {\r\n\t\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\t\tfor (var text in config) {\r\n\t\t\t\thelper.forEach(char(text), function(param) { \r\n\t\t\t\t\tinterceptions[flag].push({\r\n\t\t\t\t\t\texpr: template(name, [param, config[text].expr]),\r\n\t\t\t\t\t\treplacer: config[text].replacer\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\thandler['after-char-upper-char'] = function (config, name, flag) {\r\n\t\t\tvar obj = {};\r\n\t\t\tvar arr = helper.isArray(config) ? config : [config];\r\n\t\t\tfor (var j = 0, k = arr.length; j < k; j++) {\r\n\t\t\t\tobj[arr[j]] = {\r\n\t\t\t\t\texpr: '[a-zа-яё]',\r\n\t\t\t\t\treplacer: function (find, c, offset, str, data, noffset) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (find.length == 1) {\r\n\t\t\t\t\t\t\tstr = '';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstr = find[0];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!data.keydown.length) return str + find[find.length - 1].toLocaleUpperCase();\r\n\t\t\t\t\t\tif (data.keydown[noffset].shiftKey) return str + find[find.length - 1].toLowerCase();\r\n\t\t\t\t\t\treturn str + find[find.length - 1].toLocaleUpperCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\thandler['after-char-replace-expr'](obj, 'after-char-replace-expr', flag);\r\n\t\t};\r\n\t\thandler['after-term-replace-expr'] = function (config, name, flag) {\r\n\t\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\t\tfor (var text in config) {\r\n\t\t\t\thelper.forEach(term(text), function (param) {\r\n\t\t\t\t\tinterceptions[flag].push({\r\n\t\t\t\t\t\texpr: template(name, [param, config[text].expr]),\r\n\t\t\t\t\t\treplacer: config[text].replacer\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\tfor (var flag in config) {\r\n\t\t\tif (/[^igm]/g.test(flag)) {\r\n\t\t\t\tthrow new Error('Command regexulator can not support flag ' + flag);\r\n\t\t\t}\r\n\t\t\tflag = flag.split('').sort().join('');\r\n\t\t\tremoves[flag] = removes[flag] || [];\r\n\t\t\tinterceptions[flag] = interceptions[flag] || [];\r\n\r\n\t\t\thelper.forEach(\r\n\t\t\t\t//TODO сортируем очередь выполнения\r\n\t\t\t[\r\n\t\t\t\t'after-chars-remove-chars',\r\n\t\t\t\t'after-term-remove-chars',\r\n\t\t\t\t'after-chars-remove-term',\r\n\t\t\t\t'after-term-remove-term',\r\n\r\n\t\t\t\t'before-chars-remove-chars',\r\n\t\t\t\t'before-term-remove-chars',\r\n\t\t\t\t'before-chars-remove-term',\r\n\t\t\t\t'before-term-remove-term',\r\n\r\n\t\t\t\t'after-char-replace-expr',\r\n\t\t\t\t'after-term-replace-expr',\r\n\t\t\t\t'after-char-remove-repeat',\r\n\t\t\t\t'after-char-upper-char'\r\n\t\t\t],function (name) { \r\n\t\t\t\tif (config[flag][name] == undefined) return;\r\n\t\t\t\thandler[name](config[flag][name], name, flag);\r\n\t\t\t});\r\n\t\t}\r\n\t\t \r\n\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\tfor (flag in removes) {\r\n\t\t\tif (!removes[flag].length) continue;;\r\n\t\t\tregexeRemoves.push({\r\n\t\t\t\texpr: new RegExp(removes[flag].join('|'), flag),\r\n\t\t\t\treplacer: helper.fill(removes[flag].length, function (i) { return '$' + (i + 1) }).join('')\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar selector = function(i) {\r\n\t\t\treturn i.expr;\r\n\t\t};\r\n\r\n\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\tfor (flag in interceptions) {\r\n\t\t\tif (!interceptions[flag].length) continue;;\r\n\t\t\tregexeInterceptions.push({\r\n\t\t\t\texpr: new RegExp(helper.map(interceptions[flag], selector).join('|'), flag),\r\n\t\t\t\treplacer: interceptions[flag][0].replacer\r\n\t\t\t});\r\n\t\t}\r\n\t\t \r\n\t\t//console.log(regexeRemoves, regexeInterceptions);\r\n\t\tvar find, c, offset, str;\r\n\t\tvar parseArgs = function(args) {\r\n\t\t\tfind = args[0];\r\n\t\t\toffset = args[args.length - 2];\r\n\t\t\tstr = args[args.length - 1];\r\n\t\t\tfor (m = 1, n = args.length - 2; m < n; m++) {\r\n\t\t\t\tif (args[m] != undefined) {\r\n\t\t\t\t\tc = args[m];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tself.exec = function(text, data) {\r\n\t\t\tfor (i = 0, l = regexeRemoves.length; i < l; i++) {\r\n\t\t\t\t//bug необходимо реплейсить функцией и вырезать из data.keydown вхождения, шанс возникновения такой ситуации низок, пок так\r\n\t\t\t\ttext = text.replace(regexeRemoves[i].expr, regexeRemoves[i].replacer);\r\n\t\t\t}\r\n\t\t\tfor (i = 0, l = regexeInterceptions.length; i < l; i++) {\r\n\t\t\t\t//if (data.keydown.length)\r\n\t\t\t\ttext = text.replace(regexeInterceptions[i].expr, function () {\r\n\t\t\t\t\t//if (!data.keydown.length) return find;\r\n\t\t\t\t\tparseArgs(arguments);\r\n\t\t\t\t\t//console.log(offset);\r\n\t\t\t\t\t//console.log(data.before.length, data.diff.length, data.after.length, offset, data.cursor.start, data.cursor.end);//log\t\t\r\n\t\t\t\t\tif (data.cursor.start <= offset + 1  && offset + 1  <= data.cursor.end) {\r\n\t\t\t\t\t\tn = data.before.length + data.diff.length - offset - find.length;// + data.after.length\r\n\t\t\t\t\t\tif (!data.keydown[n]) {\r\n\t\t\t\t\t\t\tn = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn regexeInterceptions[i].replacer(find, c, offset, str, data, n);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn find;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t}\r\n\r\n\t\tself.get = function() {\r\n\t\t\treturn {\r\n\t\t\t\ttype: type,\r\n\t\t\t\tenabled: (regexeRemoves.length || regexeInterceptions.length) ? true : false,\r\n\t\t\t\tconfig: config\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn self;\r\n\t}\r\n\r\n\t// ReSharper disable once InconsistentNaming\r\n\tvar Preprocessor = function(config) {\r\n\t\tvar self = this;\r\n\t\tvar i, l, result, processes = [];\r\n\t\tvar sequence = ['layout', 'include', 'exclude', 'input'];\r\n\r\n\t\tfor (i = 0, l = sequence.length; i < l; i++) {\r\n\t\t\tif (!config[sequence[i]]) continue;\r\n\t\t\tif (config[sequence[i]] === true) config[sequence[i]] = {};\r\n\t\t\tprocesses.push(new command[sequence[i]](config[sequence[i]], sequence[i]));\r\n\t\t}\r\n\t\tfor (var j = 0; j < processes.length; j++) {\r\n\t\t\tif (!processes[j].get().enabled) {\r\n\t\t\t\tprocesses.splice(j--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tl = processes.length;\r\n\t\t\r\n\t\tself.pass = function(compute, data) {\r\n\t\t\tresult = compute;\r\n\t\t\tfor (i = 0; i < l; i++) {\r\n\t\t\t\tresult = processes[i].exec(result, data);\r\n\t\t\t\t//result.type = processes[i].type;//log\r\n\t\t\t\t//data.log.push(JSON.parse(JSON.stringify(result)));//log\r\n\t\t\t}\r\n\t\t\tresult.before = helper.codesToText(result.before);\r\n\t\t\tresult.diff = helper.codesToText(result.diff);\r\n\t\t\tresult.after = helper.codesToText(result.after);\r\n\t\t\tresult.offset = compute.offset;\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tself.config = function() {\r\n\t\t\tvar cfg = {}, info;\r\n\t\t\tfor (i = 0; i < l; i++) {\r\n\t\t\t\tinfo = processes[i].get();\r\n\t\t\t\tcfg[info.type] = info.config;\r\n\t\t\t}\r\n\t\t\t//console.log(JSON.stringify(cfg, null, 2), cfg);//log\r\n\t\t\treturn cfg;\r\n\t\t}\r\n\t\treturn self;\r\n\t};\r\n\tvar Postprocessor = function (config) {\r\n\t\tvar self = this;\r\n\t\tvar i, l, result, processes = [], length;\r\n\t\tvar sequence = ['regexulator'];\r\n\r\n\t\tfor (i = 0, l = sequence.length; i < l; i++) {\r\n\t\t\tif (!config[sequence[i]]) continue;\r\n\t\t\tif (config[sequence[i]] === true) config[sequence[i]] = {};\r\n\t\t\tprocesses.push(new command[sequence[i]](config[sequence[i]], sequence[i]));\r\n\t\t}\r\n\t\tfor (var j = 0; j < processes.length; j++) {\r\n\t\t\tif (!processes[j].get().enabled) {\r\n\t\t\t\tprocesses.splice(j--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tl = processes.length;\r\n\r\n\t\tself.pass = function (text, data) {\r\n\t\t\tresult = text;\r\n\t\t\tlength = result.length;\r\n\t\t\tfor (i = 0; i < l; i++) {\r\n\t\t\t\tresult = processes[i].exec(result, data);\r\n\t\t\t\t//result.type = processes[i].type;//log\r\n\t\t\t\t//data.log.push(JSON.parse(JSON.stringify(result)));//log\r\n\t\t\t}\r\n\t\t\tdata.result.offset += length - result.length;\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tself.config = function () {\r\n\t\t\tvar cfg = {}, info;\r\n\t\t\tfor (i = 0; i < l; i++) {\r\n\t\t\t\tinfo = processes[i].get();\r\n\t\t\t\tcfg[info.type] = info.config;\r\n\t\t\t}\r\n\t\t\t//console.log(JSON.stringify(cfg, null, 2), cfg);//log\r\n\t\t\treturn cfg;\r\n\t\t}\r\n\t\treturn self;\r\n\t};\r\n\r\n\t// ReSharper disable once InconsistentNaming\r\n\tvar LiveInput = function(config) {\r\n\t\tvar self = this; \r\n\t\tvar lang = config.lang;\r\n\t\tvar interval = config.interval || 500;\r\n\t\tvar preprocessor = new Preprocessor(config);\r\n\t\tvar postprocessor = new Postprocessor(config);\r\n\t\t//processor.config();//log\r\n\t\tvar heap = {};\r\n\t\t\r\n\t\tvar event, eventindex, eventcount;\r\n\t\tvar callevents = function (events, name, data, arg) {\r\n\t\t\tif (!events[name]) return;\r\n\t\t\tevent = events[name];\r\n\t\t\tfor (eventindex = 0, eventcount = event.length; eventindex < eventcount; eventindex++) {\r\n\t\t\t\tevent[eventindex].apply(data, arg);\r\n\t\t\t}\r\n\t\t};\r\n\t\t//window.kb = [];\r\n\t\tvar onkeyup = function (e, el, data, cursor, events, ptr) {\r\n\t\t\t//if (data.old == el.value) return;\r\n\t\t\t//console.log('onkeyup', e.keyCode);\r\n \r\n\t\t\t//if (whitelist.indexOf(e.keyCode) == -1) return true;\r\n\r\n\t\t\t//data.log = [];//log\r\n\r\n\t\t\t//if (data.copypast) {\r\n\t\t\t//\tdata.keydown = [];\r\n\t\t\t//}\r\n\r\n\t\t\t//data.shift = e.shiftKey && !data.copypast;\r\n\t\t\t//data.control = e.ctrlKey && !data.copypast;\r\n\t\t\t//data.alt = e.altKey && !data.copypast;\r\n\t\t\t\r\n\t\t\t//console.log('before', JSON.parse(JSON.stringify(cursor)));\r\n\t\t\t//cursor.update();\r\n\t\t\tcursor.release();\r\n\t\t\t//console.log('after', JSON.parse(JSON.stringify(cursor)));\r\n\t\t\t//data.cursor = cursor.get();//log\r\n\t\t\t \r\n\t\t\t//console.log('after', JSON.stringify(JSON.parse(cursor.get())));\r\n\t\t\t//if (e.keyCode == 8) {//backspace \r\n\t\t\t//\tdata.before = cursor.text.substring(0, cursor.end);\r\n\t\t\t//\tdata.diff = '';\r\n\t\t\t//\tdata.after = cursor.text.substring(cursor.end);\r\n\t\t\t//} else {\r\n\t\t\tdata.before = el.value.substring(0, cursor.start);\r\n\t\t\tdata.diff = el.value.substring(cursor.start, cursor.end);\r\n\t\t\t//console.log(helper.charToCode(data.diff));//log\r\n\t\t\tconsole.log('onkeyup', data.diff);\r\n\r\n\t\t\t//var press = {};\r\n\t\t\t//press[data.diff] = e.keyCode;\r\n\t\t\t//press[data.diff.toLocaleUpperCase()] = e.keyCode;\r\n\r\n\t\t\t//window.kb.push(press);\r\n\t\t\t//console.log(press);\r\n\r\n\t\t\tdata.after = el.value.substring(cursor.end);\r\n\t\t\t//}\t\t\r\n\r\n\t\t\r\n\t\t\tif (e.ctrlKey && hotkeymap.control[e.keyCode]) {\r\n\t\t\t\tdata.diff += hotkeymap.control[e.keyCode];\r\n\t\t\t\t//data.result.offset -= hotkeymap.control[e.keyCode].length;\r\n\t\t\t\t//data.hotkey = true;\r\n\t\t\t}\r\n\t\t\t//if (data.old == el.value) {\r\n\t\t\t//\tdata.keydown = [];\r\n\t\t\t//\tptr.timer = null;\r\n\t\t\t//\treturn true;\r\n\t\t\t//}\r\n\r\n\t\t\tdata.result = preprocessor.pass({\r\n\t\t\t\tbefore: helper.textToCodes(data.before),\r\n\t\t\t\tdiff: helper.textToCodes(data.diff),\r\n\t\t\t\tafter: helper.textToCodes(data.after),\r\n\t\t\t\toffset: e.ctrlKey && -data.diff.length || 0\r\n\t\t\t}, data);\r\n\r\n\t\t\t\r\n\r\n\t\t\t//var press = {\r\n\t\t\t//\tkeyCode: e.keyCode,\r\n\t\t\t//\tcharCode: helper.charToCode(data.result.diff)\r\n\t\t\t//}\r\n\t\t\t//console.log(press);\r\n\r\n\t\t\tdata.result.value = data.result.before + data.result.diff + data.result.after;\r\n\t\t\t\r\n\t\t\tdata.result.value = postprocessor.pass(data.result.value, data);\r\n\t\t\t\r\n\t\t\tcallevents(events, 'change', data, [data.result.value, data.old, lang]);\r\n\r\n\t\t\tdata.old = el.value;\r\n\r\n\t\t\t//data.old = data.result.value;\r\n\t\t\t//var copy = JSON.parse(JSON.stringify(data));//log\r\n\t\t\t//console.log(JSON.parse(JSON.stringify(data)));//log\r\n\r\n\t\t\tcursor.move(data.result.offset);\r\n\t\t\t//cursor.release();\r\n\r\n\t\t\tdata.keydown = [];\r\n\t\t\t//data.hotkey = false;\r\n\t\t\t//delete ptr.timer;\r\n\t\t\tptr.timer = null;\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tvar refresh = function (el) {\r\n\t\t\tif (!el.value.length) return;\r\n\t\t\tvar ptr = heap[el.GUID];\r\n\t\t\tclearTimeout(ptr.timer);\r\n\t\t\tif (!ptr.timer) {\r\n\t\t\t\tptr.cursor.refresh();\r\n\t\t\t}\t\t\t\t\r\n\t\t\tonkeyup({\r\n\t\t\t\tkeyCode: whitelist[0]\r\n\t\t\t}, el, ptr.data, ptr.cursor, ptr.events, ptr);\r\n\t\t}\r\n\r\n\t\tvar onkeydown = function (e, el, data, cursor, events, ptr) {\r\n\t\t\t//console.log(e.keyCode);\r\n\t\t\t//data.copypast = false;\r\n\r\n\t\t\t//if (e.ctrlKey && !hotkey.control[e.keyCode]) {\r\n\t\t\t//\te.preventDefault();\r\n\t\t\t//\treturn false;\r\n\t\t\t//}\r\n\t\t\tif (e.ctrlKey) {\r\n\t\t\t\tswitch (e.keyCode) {\r\n\t\t\t\t\tcase 90: //Control+Z\r\n\t\t\t\t\tcase 67: //Control+C\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t//bug добавить специфическую обработку, refresh(el) не работает, буква вовращается после\r\n\t\t\t\t\tcase 89: //Control+Y\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (data.mousedown ) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//TODO сделать список клавишь при нажатии на которые срабатывает refresh\r\n\t\t\tif (helper.indexOf(whitelist, e.keyCode) == -1) {\r\n\t\t\t\tif (ptr.timer)\r\n\t\t\t\t\trefresh(el);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tclearTimeout(ptr.timer);\r\n\t\t\t//console.log(Date.now())\r\n\r\n\r\n\t\t\tdata.keydown.push({\r\n\t\t\t\tkeyCode: e.keyCode,\r\n\t\t\t\tshiftKey: e.shiftKey,\r\n\t\t\t\tctrlKey: e.ctrlKey\r\n\t\t\t});\r\n\r\n\t\t\t//console.log('push', data.keydown[data.keydown.length-1]);\r\n\r\n\t\t\tif (!ptr.timer) {\r\n\t\t\t\tcursor.press();\r\n\t\t\t}\r\n\r\n\t\t\tptr.timer = setTimeout(function() {\r\n\t\t\t\tonkeyup(e, el, data, cursor, events, ptr);\r\n\t\t\t}, interval);\r\n \r\n\t\t\tif (e.ctrlKey && helper.indexOf(hotkey.control, e.keyCode) != -1) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t//var onpaste = function(e, data) {\r\n\t\t//\t//data.copypast = true;\r\n\t\t//\tdata.keydown = [];\r\n\t\t//\treturn true;\r\n\t\t//};\r\n\r\n\t\tself.bind = function(el) {\r\n\t\t\tif (!el.GUID) {\r\n\t\t\t\tel.GUID = helper.GUID();\r\n\t\t\t}\r\n\t\t\tvar ptr = heap[el.GUID] = {};\r\n\t\t\tptr.data = {\r\n\t\t\t\tkeydown: [],\r\n\t\t\t\tresult: {},\r\n\t\t\t\told: ''\r\n\t\t\t};\r\n\t\t\tptr.cursor = new Cursor(el);\r\n\t\t\t//ptr.cursor.refresh(el);\r\n\t\t\tvar data = ptr.data;\r\n\t\t\tvar cursor = ptr.data.cursor = ptr.cursor;\r\n\t\t\tvar events = ptr.events = {};\r\n\t\t\tptr.keydown = function (e) {\r\n\t\t\t\t//console.log('keydown', e.keyCode);\r\n\t\t\t\tonkeydown(e, el, data, cursor, events, ptr);\r\n\t\t\t};\r\n\t\t\tptr.paste = function (e) {\r\n\t\t\t\t//console.log('paste');\r\n\t\t\t\t//onpaste(e, data);\r\n\t\t\t\tdata.keydown = [];\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\t\t\tptr.dragover = function (e) {\r\n\t\t\t\t//console.log('dragover');\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tptr.mousedown = function () {\r\n\t\t\t\t//console.log('onmousedown');\r\n\t\t\t\tptr.data.mousedown = true;\r\n\t\t\t\t//if (ptr.timer) return;\r\n\t\t\t\trefresh(el);\r\n\t\t\t\t//cursor.press();\r\n\t\t\t}\r\n\t\t\tptr.mouseup = function () {\r\n\t\t\t\t//console.log('onmouseup');\r\n\t\t\t\tptr.data.mousedown = false;\r\n\t\t\t\t//if (ptr.timer) return;\r\n\t\t\t\t//cursor.release();\r\n\t\t\t\t//refresh(el);\r\n\t\t\t}\r\n\t\t\tptr.mouseleave = function() {\r\n\t\t\t\t//console.log('onmouseleave');\r\n\t\t\t\tptr.data.mousedown = false;\r\n\t\t\t}\r\n\t\t\tptr.blur = function () {\r\n\t\t\t\t//console.log('blur');\r\n\t\t\t\t\r\n\t\t\t\t//if (ptr.timer)\r\n\t\t\t\t\trefresh(el);\r\n\t\t\t}\r\n\r\n\t\t\thelper.addEvent(el, 'keydown', ptr.keydown);\r\n\t\t\thelper.addEvent(el, 'paste', ptr.paste);\r\n\t\t\thelper.addEvent(el, 'mousedown', ptr.mousedown);\r\n\t\t\thelper.addEvent(el, 'mouseup', ptr.mouseup);\r\n\t\t\thelper.addEvent(el, 'mouseleave', ptr.mouseleave);\r\n\t\t\thelper.addEvent(el, 'dragover', ptr.dragover);\r\n\t\t\thelper.addEvent(el, 'blur', ptr.blur);\r\n\r\n\t\t\tel.focus();\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\tself.unbind = function(el) {\r\n\t\t\tvar ptr = heap[el.GUID];\r\n\r\n\t\t\thelper.removeEvent(el, 'keydown', ptr.keydown);\r\n\t\t\thelper.removeEvent(el, 'paste', ptr.paste);\r\n\t\t\thelper.removeEvent(el, 'mousedown', ptr.mousedown);\r\n\t\t\thelper.removeEvent(el, 'mouseup', ptr.mouseup);\r\n\t\t\thelper.removeEvent(el, 'mouseleave', ptr.mouseleave);\r\n\t\t\thelper.removeEvent(el, 'dragover', ptr.dragover);\r\n\t\t\thelper.removeEvent(el, 'blur', ptr.blur);\r\n\r\n\t\t\tdelete heap[el.GUID];\r\n\t\t\tdelete ptr;\r\n\t\t\tdelete el.GUID;\r\n\t\t\treturn self;\r\n\t\t};\r\n\t\tself.on = function(event, el, cb) {\r\n\t\t\theap[el.GUID].events[event] = heap[el.GUID].events[event] || [];\r\n\t\t\theap[el.GUID].events[event].push(cb);\r\n\r\n\t\t\tswitch (event) {\r\n\t\t\tcase 'change':\r\n\t\t\t\tif (el.value.length)\r\n\t\t\t\t\trefresh(el);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn self;\r\n\t\t};\r\n\t\tself.off = function(event, el, cb) {\r\n\t\t\teventindex = helper.indexOf(heap[el.GUID].events[event], cb);\r\n\t\t\tif (eventindex == -1) return self;\r\n\t\t\theap[el.GUID].events[event].splice(eventindex, 1);\r\n\t\t\treturn self;\r\n\t\t};\r\n\t\treturn self;\r\n\t};\r\n\r\n\tvar setLang = function(config) {\r\n\t\tif (typeof config.lang == 'undefined') return;\r\n\t\tvar lang = config.lang;\r\n\t\t//delete config.lang;\r\n\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\tfor (var p in config) {\r\n\t\t\tif (!config[p]) continue;\r\n\t\t\tif (config[p] == true) {\r\n\t\t\t\tconfig[p] = {};\r\n\t\t\t}\r\n\t\t\tconfig[p].lang = lang;\r\n\t\t}\r\n\t};\r\n\tvar mergeConfig = function(a, b) {\r\n\t\tif(!b) return a;\r\n\t\t// ReSharper disable once MissingHasOwnPropertyInForeach\r\n\t\tfor (var p in b) {\r\n\t\t\tif (typeof a[p] == 'object') {\r\n\t\t\t\ta[p] = mergeConfig(a[p], b[p]);\r\n\t\t\t} else { // if(a[p] === true) \r\n\t\t\t\ta[p] = b[p];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\r\n\tvar init = function (name, options) {\r\n\t\tif (typeof name == 'object' || typeof name == 'undefined') {\r\n\t\t\toptions = name;\r\n\t\t\tname = 'default';\r\n\t\t}\r\n\t\tif (!types[name]) {\r\n\t\t\tthrow new Error('Can not find liveinput type ' + name);\r\n\t\t}\r\n\t\treturn types[name](options);\r\n\t};\r\n\tvar configuration = function (config) {\r\n\t\tmergeConfig(types, config);\r\n\t};\r\n\r\n\tvar types = {\r\n\t\t'default': function (options) {\r\n\t\t\t//var special = ' `-=~!@#$%^&*()_+;\\'\\,./:\"|<>?';//{}[]\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\t//язык ru/en\r\n\t\t\t\tlang: '',\r\n\t\t\t\tinterval: 700,//1,\r\n\t\t\t\t//отвечает за перевод одного языка в другой\r\n\t\t\t\tlayout: true,\r\n\t\t\t\t//отвечает за разрешённые символы\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\t//буквы\r\n\t\t\t\t\tchars: true,\r\n\t\t\t\t\t//цифры\r\n\t\t\t\t\tnumbers: true,\r\n\t\t\t\t\t//символы\r\n\t\t\t\t\tsymbols: true,\r\n\t\t\t\t\t//произвольный список разрещённых символов\r\n\t\t\t\t\tspecial: ''\r\n\t\t\t\t},\r\n\t\t\t\t//отвечает за запрет символов\r\n\t\t\t\texclude: {\r\n\t\t\t\t\t//список запрещённых символов\r\n\t\t\t\t\tspecial: '{}[]'\r\n\t\t\t\t},\r\n\t\t\t\t//Отвечает за правила ввода\r\n\t\t\t\tinput: {\r\n\t\t\t\t\t//lower/upper\r\n\t\t\t\t\tregister: '',\r\n\t\t\t\t\t//отвечает за игнорирование CapsLock'а\r\n\t\t\t\t\tcapslock: false\r\n\t\t\t\t},\r\n\t\t\t\t//отвечает за регулярные выражения\r\n\t\t\t\t//remove-chars-after-chars, remove repeat\r\n\t\t\t\tregexulator: {\r\n\t\t\t\t\t//flag: g - multi search; i - ignore case; m - multi lines\r\n\t\t\t\t\tg: {\r\n\t\t\t\t\t\t////после любого из символов удалить повторы\r\n\t\t\t\t\t\t//'after-char-remove-repeat': special,\r\n\t\t\t\t\t\t////после любого из символов поднять символы\r\n\t\t\t\t\t\t//'after-char-upper-char': '\\'',//['\\'', ''],//'' - начало строки\r\n\t\t\t\t\t\t////после любого из символов удаляет символы\r\n\t\t\t\t\t\t//'after-chars-remove-chars': {\r\n\t\t\t\t\t\t//\t'': special\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t////после слова удаляет символы\r\n\t\t\t\t\t\t//'after-term-remove-chars': {\r\n\t\t\t\t\t\t//\t'имя': '0123456789'\r\n\t\t\t\t\t\t//},\r\n\t\t\t\t\t\t////после любого из символов удаляет слово\r\n\t\t\t\t\t\t//'after-chars-remove-term': {\r\n\t\t\t\t\t\t//\t'0123456789': '№'\r\n\t\t\t\t\t\t//},\r\n\t\t\t\t\t\t////после слова удаляет слова\r\n\t\t\t\t\t\t//'after-term-remove-term': {\r\n\t\t\t\t\t\t//\t'из': 'в',\r\n\t\t\t\t\t\t//\t'да': 'нет'\r\n\t\t\t\t\t\t//},\r\n\t\t\t\t\t\t////перед любым из символов удаляет символы\r\n\t\t\t\t\t\t////before поддерживает всё тоже что и after\r\n\t\t\t\t\t\t//'before-chars-remove-chars': {\r\n\t\t\t\t\t\t//\t'№': '0123456789'\r\n\t\t\t\t\t\t//},\r\n\t\t\t\t\t\t////реализует тоже самое что и after-chars-upper-char но для кавычек\r\n\t\t\t\t\t\t//'after-char-replace-expr': {\r\n\t\t\t\t\t\t//\t'\"': {\r\n\t\t\t\t\t\t//\t\t//регулярное выражение\r\n\t\t\t\t\t\t//\t\texpr: '[a-za-яё]',\r\n\t\t\t\t\t\t//\t\t//функция замены\r\n\t\t\t\t\t\t//\t\treplacer: function(find, c, offset, text, data, noffset) {\r\n\t\t\t\t\t\t//\t\t\treturn find[0] + find[1].toLocaleUpperCase();\r\n\t\t\t\t\t\t//\t\t}\r\n\t\t\t\t\t\t//\t}\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\tsetLang(config);\r\n\t\t\treturn new LiveInput(config);\r\n\t\t},\r\n\t\t'fio': function (options) {\r\n\t\t\tvar special = ' \\'-';\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tlang: 'ru',\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tnumbers: false,\r\n\t\t\t\t\tsymbols: false,\r\n\t\t\t\t\tspecial: special\r\n\t\t\t\t},\r\n\t\t\t\tregexulator: {\r\n\t\t\t\t\tg: {\r\n\t\t\t\t\t\t'after-char-remove-repeat': special,\r\n\t\t\t\t\t\t'after-char-upper-char': ['\\'', ''],//'' - начало строки\r\n\t\t\t\t\t\t'after-chars-remove-chars': {\r\n\t\t\t\t\t\t\t'': special\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t},\r\n\t\t'numeric': function (options) {\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tchars: false,\r\n\t\t\t\t\tnumbers: true,\r\n\t\t\t\t\tsymbols: false,\r\n\t\t\t\t\tspecial: ''\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t},\r\n\t\t'place': function (options) {\r\n\t\t\tvar special = '. \\'-';\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tlang: 'ru',\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tnumbers: false,\r\n\t\t\t\t\tsymbols: false,\r\n\t\t\t\t\tspecial: special\r\n\t\t\t\t},\r\n\t\t\t\tregexulator: {\r\n\t\t\t\t\tg: {\r\n\t\t\t\t\t\t'after-char-remove-repeat': special,\r\n\t\t\t\t\t\t'after-char-upper-char': ['\\'', ''],//'' - начало строки\r\n\t\t\t\t\t\t'after-chars-remove-chars': {\r\n\t\t\t\t\t\t\t'': special\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t},\r\n\t\t'peopled-place': function (options) {\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tnumbers: true\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init('place', config);\r\n\t\t},\r\n\t\t'address': function (options) {\r\n\t\t\tvar special = '-/';\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tsymbols: false,\r\n\t\t\t\t\tspecial: special\r\n\t\t\t\t},\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tregister: 'upper',\r\n\t\t\t\t\tcapslock: true\r\n\t\t\t\t},\r\n\t\t\t\tregexulator: {\r\n\t\t\t\t\tg: {\r\n\t\t\t\t\t\t'after-char-remove-repeat': special,\r\n\t\t\t\t\t\t'after-chars-remove-chars': {\r\n\t\t\t\t\t\t\t'': special\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t},\r\n\t\t'month': function (options) {\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tlang: 'ru',\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tnumbers: true,\r\n\t\t\t\t\tsymbols: false\r\n\t\t\t\t},\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tcapslock: false\r\n\t\t\t\t},\r\n\t\t\t\tregexulator: {\r\n\t\t\t\t\tg: {\r\n\t\t\t\t\t\t'after-char-remove-repeat': '0',\r\n\t\t\t\t\t\t'after-char-upper-char': ''\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t},\r\n\t\t'passport-issue': function (options) {\r\n\t\t\tvar special = '. -\"№';\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tlang: 'ru',\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tnumbers: false,\r\n\t\t\t\t\tsymbols: false,\r\n\t\t\t\t\tspecial: special\r\n\t\t\t\t},\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tcapslock: true\r\n\t\t\t\t},\r\n\t\t\t\tregexulator: {\r\n\t\t\t\t\tg: {\r\n\t\t\t\t\t\t'after-char-remove-repeat': special,\r\n\t\t\t\t\t\t'after-chars-remove-chars': {\r\n\t\t\t\t\t\t\t'': special\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t},\r\n\t\t'international-passport-issue': function (options) {\r\n\t\t\tvar special = ' -';\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tlang: '',\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tnumbers: false,\r\n\t\t\t\t\tsymbols: false,\r\n\t\t\t\t\tspecial: special\r\n\t\t\t\t},\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tcapslock: true\r\n\t\t\t\t},\r\n\t\t\t\tregexulator: {\r\n\t\t\t\t\tg: {\r\n\t\t\t\t\t\t'after-char-remove-repeat': special,\r\n\t\t\t\t\t\t'after-chars-remove-chars': {\r\n\t\t\t\t\t\t\t'': special\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t},\r\n\t\t'international-document-serial': function (options) {\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tlang: '',\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tnumbers: true,\r\n\t\t\t\t\tsymbols: false\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t},\r\n\t\t'document-issue': function (options) {\r\n\t\t\tvar special = ' .,-/\"()№\\'';\r\n\t\t\tvar config = mergeConfig({\r\n\t\t\t\tlang: 'ru',\r\n\t\t\t\tinclude: {\r\n\t\t\t\t\tnumbers: true,\r\n\t\t\t\t\tsymbols: false,\r\n\t\t\t\t\tspecial: special\r\n\t\t\t\t},\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tregister: 'lower',\r\n\t\t\t\t\tcapslock: true\r\n\t\t\t\t},\r\n\t\t\t\tregexulator: {\r\n\t\t\t\t\tg: {\r\n\t\t\t\t\t\t'after-char-remove-repeat': special,\r\n\t\t\t\t\t\t'after-chars-remove-chars': {\r\n\t\t\t\t\t\t\t'': special\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, options);\r\n\t\t\treturn init(config);\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tinit: init,\r\n\t\tconfiguration: configuration\r\n\t};\r\n};\r\n\r\nif (typeof module != \"undefined\") {\r\n\tmodule.exports = liveinput;\r\n} else if (window) {\r\n\twindow.liveinput = liveinput;\r\n}\r\n"],"sourceRoot":"/source/"}