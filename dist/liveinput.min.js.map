{"version":3,"sources":["liveinput.js"],"names":["liveinput","hotkeymap","parseCode","keymapper","hotkey","command","Preprocessor","Postprocessor","LiveInput","setLang","mergeConfig","cache","types","configuration","init","set","helper","rnd","Math","random","bind","Function","prototype","func","thisArg","slice","Array","args","call","arguments","apply","concat","extrude","filter","arr","cb","i","l","res","length","push","map","forEach","indexOf","v","except","target","remove","charToCode","c","charCodeAt","textToCodes","text","split","codesToText","codes","String","fromCharCode","addEvent","el","event","addEventListener","attachEvent","removeEvent","removeEventListener","detachEvent","guidchar","toString","guid","replace","format","arg","RegExp","fill","getSelectionStart","range","startRange","endRange","len","start","value","selectionEnd","selectionStart","document","selection","createRange","createTextRange","moveToBookmark","getBookmark","collapse","compareEndPoints","moveStart","getSelectionEnd","end","moveEnd","setCaretPosition","pos","setSelectionRange","select","getOwnPropertyNames","obj","p","props","hasOwnProperty","isArray","Object","extend","a","b","callEvent","e","createEvent","initEvent","dispatchEvent","createEventObject","setTimeout","fireEvent","ex","preventDefault","returnValue","copy","JSON","parse","stringify","GUID","add","Cursor","movepos","self","this","max","min","moveBack","press","release","change","move","offset","restore","selectAll","langs","whitelist","additional","keyCodes","charCodes","control",50,51,52,53,54,55,222,"shift","ru",192,219,221,186,220,188,190,191,226,"en","code","Number","layout","config","type","lang","relation","special","convert","keyCode","others","j","diff","index","added","k","exec","compute","data","keydown","converted","ctrlKey","splice","get","enabled","include","presets","sources","preset","chars","numbers","symbols","allowed","exclude","input","register","capslock","findhere","sequence","right","wrong","m","n","handler","lower","upper","result","shiftKey","regexulator","templates","removes","interceptions","regexeRemoves","regexeInterceptions","mapping","char","term","template","flag","selector","find","str","parseArgs","after-chars-remove-chars","after-term-remove-chars","after-chars-remove-term","after-term-remove-term","before-chars-remove-chars","before-term-remove-chars","before-chars-remove-term","before-term-remove-term","after-char-remove-repeat","after-char-replace-expr","after-term-replace-expr","after-char-upper-char","[","]","\\","/","^","$",".","|","?","*","+","(",")","{","}","'","val","join","name","param","secondparam","expr","replacer","noffset","charAt","toLowerCase","toLocaleUpperCase","test","Error","sort","cursor","before","processes","pass","after","info","cfg","eventIndex","eventCount","interval","preprocessor","postprocessor","heap","callElementEvent","old","callLiveinputEvent","events","ptr","onkeyup","substring","timer","refresh","clearTimeout","onkeydown","mousedown","paste","dragover","mouseup","mouseleave","blur","window","unbind","prop","key","on","off","default","g","fio","numeric","address","month","merge","options","instance","module","exports"],"mappings":"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","file":"liveinput.min.js","sourcesContent":["/**\n * liveinput - Input text auto changer\n * @version v1.0.8\n * @link https://github.com/vahpetr/liveinput/\n * @license Apache-2.0\n */\nvar liveinput = new function() {\n    var helper = function() {\n        return new function() {\n            var rnd = Math.random;\n            var bind = Function.prototype.bind ? function(func, thisArg) {\n                return func.bind(thisArg);\n            } : function(func, thisArg) {\n                var slice = Array.prototype.slice, args = slice.call(arguments, 2);\n                return function() {\n                    return func.apply(thisArg, args.concat(slice.call(arguments)));\n                };\n            };\n            var extrude = function(thisArg) {\n                return bind(Function.prototype.call, thisArg);\n            };\n            var filter = Array.prototype.filter ? extrude(Array.prototype.filter) : function(arr, cb) {\n                var i, l, res = [];\n                for (i = 0, l = arr.length; i < l; i++) if (cb(arr[i], i, arr)) res.push(arr[i]);\n                return res;\n            };\n            var map = Array.prototype.map ? extrude(Array.prototype.map) : function(arr, cb) {\n                var i, l, res = [];\n                for (i = 0, l = arr.length; i < l; i++) res.push(cb(arr[i], i, arr));\n                return res;\n            };\n            var forEach = Array.prototype.forEach ? extrude(Array.prototype.forEach) : function(arr, cb) {\n                for (var i = 0, l = arr.length; i < l; i++) cb(arr[i], i, arr);\n            };\n            var indexOf = Array.prototype.indexOf ? extrude(Array.prototype.indexOf) : function(arr, v) {\n                var i, l;\n                for (i = 0, l = arr.length; i < l; i++) if (arr[i] == v) return i;\n                return -1;\n            };\n            var except = function(target, remove) {\n                return filter(target, function(i) {\n                    return indexOf(remove, i) == -1;\n                });\n            };\n            var charToCode = function(c) {\n                return c.charCodeAt();\n            };\n            var textToCodes = function(text) {\n                return map(text.split(\"\"), charToCode);\n            };\n            var codesToText = function(codes) {\n                return String.fromCharCode.apply(void 0, codes);\n            };\n            var addEvent = function(el, event, cb) {\n                if (el.addEventListener) return el.addEventListener(event, cb, true);\n                return el.attachEvent(\"on\" + event, cb);\n            };\n            var removeEvent = function(el, event, cb) {\n                if (el.removeEventListener) return el.removeEventListener(event, cb, true);\n                return el.detachEvent(\"on\" + event, cb);\n            };\n            var guidchar = function() {\n                return (16 * rnd() | 0).toString(16);\n            };\n            var guid = function() {\n                return \"00000000-0000-0000-0000-000000000000\".replace(/0/g, guidchar);\n            };\n            var format = function(text, arg) {\n                for (var i = 0, l = arg.length; i < l; i++) text = text.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), arg[i]);\n                return text;\n            };\n            var fill = function(l, cb) {\n                var res = [];\n                for (var i = 0; i < l; i++) res.push(cb(i, l, res));\n                return res;\n            };\n            var getSelectionStart = function(el) {\n                if (void 0 != el.selectionEnd) return el.selectionStart;\n                var range = document.selection.createRange();\n                var startRange = el.createTextRange();\n                startRange.moveToBookmark(range.getBookmark());\n                var endRange = el.createTextRange();\n                endRange.collapse(false);\n                var len = el.value.length;\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) return len;\n                var start = -startRange.moveStart(\"character\", -len);\n                var value = el.value.replace(/\\r\\n/g, \"\\n\");\n                start += value.slice(0, start).split(\"\\n\").length - 1;\n                return start;\n            };\n            var getSelectionEnd = function(el) {\n                if (void 0 != el.selectionEnd) return el.selectionEnd;\n                var range = document.selection.createRange();\n                var startRange = el.createTextRange();\n                startRange.moveToBookmark(range.getBookmark());\n                var endRange = el.createTextRange();\n                endRange.collapse(false);\n                var len = el.value.length;\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) return len;\n                var value = el.value.replace(/\\r\\n/g, \"\\n\");\n                var end = -startRange.moveEnd(\"character\", -len);\n                end += value.slice(0, end).split(\"\\n\").length - 1;\n                return end;\n            };\n            var setCaretPosition = function(el, pos) {\n                if (el.setSelectionRange) return el.setSelectionRange(pos.start, pos.end);\n                var range = el.createTextRange();\n                range.collapse(true);\n                range.moveStart(\"character\", pos.start);\n                range.moveEnd(\"character\", pos.end - pos.start);\n                range.select();\n            };\n            var getOwnPropertyNames = function(obj) {\n                var props = [];\n                for (var p in obj) if (obj.hasOwnProperty(p)) props.push(p);\n                return props;\n            };\n            var isArray = Array.isArray || function(arg) {\n                return \"[object Array]\" === Object.prototype.toString.call(arg);\n            };\n            var extend = function(a, b) {\n                if (!b) return;\n                for (var p in b) a[p] = b[p];\n            };\n            var callEvent = function(el, event, obj) {\n                var e;\n                if (document.createEvent) {\n                    e = document.createEvent(\"HTMLEvents\");\n                    extend(e, obj);\n                    e.initEvent(event, false, false);\n                    return el.dispatchEvent(e);\n                }\n                e = document.createEventObject();\n                extend(e, obj);\n                setTimeout(function() {\n                    try {\n                        el.fireEvent(\"on\" + event, e);\n                    } catch (ex) {}\n                }, 0);\n            };\n            var preventDefault = function(e) {\n                e.preventDefault ? e.preventDefault() : e.returnValue = false;\n            };\n            var copy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            return {\n                charToCode: charToCode,\n                textToCodes: textToCodes,\n                codesToText: codesToText,\n                GUID: guid,\n                format: format,\n                fill: fill,\n                getSelectionStart: getSelectionStart,\n                getSelectionEnd: getSelectionEnd,\n                setCaretPosition: setCaretPosition,\n                getOwnPropertyNames: getOwnPropertyNames,\n                bind: bind,\n                filter: filter,\n                map: map,\n                forEach: forEach,\n                except: except,\n                indexOf: indexOf,\n                isArray: isArray,\n                event: {\n                    add: addEvent,\n                    remove: removeEvent,\n                    call: callEvent\n                },\n                preventDefault: preventDefault,\n                copy: copy\n            };\n        }();\n    }();\n    var Cursor = function(el) {\n        var self = this;\n        var max = Math.max;\n        var min = Math.min;\n        self.start = 0;\n        self.end = 0;\n        self.range = false;\n        self.moveBack = false;\n        self.press = function() {\n            if (self.range) return;\n            self.end = self.start = helper.getSelectionStart(el);\n        };\n        self.release = function() {\n            self.end = helper.getSelectionEnd(el);\n        };\n        self.change = function() {\n            self.start = helper.getSelectionStart(el);\n            self.end = helper.getSelectionEnd(el);\n        };\n        var movepos;\n        self.move = function(offset) {\n            if (self.range) {\n                self.restore();\n                self.range = false;\n                return;\n            }\n            movepos = (self.moveBack ? min : max)(self.start - offset, self.end - offset);\n            helper.setCaretPosition(el, {\n                start: movepos,\n                end: movepos\n            });\n            self.press();\n            self.moveBack = false;\n        };\n        self.selectAll = function() {\n            helper.setCaretPosition(el, {\n                start: 0,\n                end: el.value.length\n            });\n            self.change();\n        };\n        self.restore = function() {\n            helper.setCaretPosition(el, {\n                start: self.start,\n                end: self.end\n            });\n        };\n        return self;\n    };\n    var langs = [ \"ru\", \"en\" ];\n    var whitelist = [ 192, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 187, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 219, 221, 65, 83, 68, 70, 71, 72, 74, 75, 76, 186, 222, 220, 226, 90, 88, 67, 86, 66, 78, 77, 188, 190, 191, 111, 106, 109, 107, 12 ];\n    var additional = {\n        keyCodes: [ 32, 13 ],\n        charCodes: [ 32, 10, 8 ]\n    };\n    whitelist.push.apply(whitelist, additional.keyCodes);\n    var hotkeymap = {\n        control: {\n            50: \"@\",\n            51: \"#\",\n            52: \"$\",\n            53: \"%\",\n            54: \"^\",\n            55: \"&\",\n            222: \"'\"\n        },\n        shift: {\n            ru: {\n                192: \"ё\",\n                50: '\"',\n                51: \"№\",\n                52: \";\",\n                54: \":\",\n                55: \"?\",\n                219: \"х\",\n                221: \"ъ\",\n                186: \"ж\",\n                222: \"э\",\n                220: \"/\",\n                188: \"б\",\n                190: \"ю\",\n                191: \",\",\n                226: \"/\"\n            },\n            en: {\n                192: \"~\",\n                50: \"@\",\n                51: \"#\",\n                52: \"$\",\n                54: \"^\",\n                55: \"&\",\n                186: \":\",\n                222: '\"',\n                220: \"|\",\n                188: \"<\",\n                190: \">\",\n                191: \"?\",\n                226: \"|\"\n            }\n        }\n    };\n    var parseCode = function(code) {\n        return Number(code);\n    };\n    var keymapper = function(map) {\n        var props = helper.getOwnPropertyNames(map);\n        return helper.map(props, parseCode);\n    };\n    var hotkey = {\n        control: keymapper(hotkeymap.control),\n        shift: {\n            ru: keymapper(hotkeymap.shift.ru),\n            en: keymapper(hotkeymap.shift.en)\n        }\n    };\n    var command = {};\n    command.layout = function(config, type) {\n        var self = this;\n        self.type = type;\n        var lang = config.lang;\n        var map = {\n            ru: [ 1105, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1025, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1093, 1098, 92, 49, 51, 53, 56, 57, 48, 45, 61, 1061, 1066, 47, 33, 8470, 37, 42, 40, 41, 95, 43 ],\n            en: [ 96, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 97, 115, 100, 102, 103, 104, 106, 107, 108, 122, 120, 99, 118, 98, 110, 109, 126, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 65, 83, 68, 70, 71, 72, 74, 75, 76, 90, 88, 67, 86, 66, 78, 77, 91, 93, 92, 49, 51, 53, 56, 57, 48, 45, 61, 123, 125, 124, 33, 35, 37, 42, 40, 41, 95, 43 ]\n        };\n        for (var p in map) map[p].push.apply(map[p], additional.charCodes);\n        var relation = {\n            50: [ [ 50, 34 ], [ 50, 64 ] ],\n            52: [ [ 52, 59 ], [ 52, 36 ] ],\n            54: [ [ 54, 58 ], [ 54, 94 ] ],\n            55: [ [ 55, 63 ], [ 55, 38 ] ],\n            186: [ [ 1078, 1046 ], [ 59, 58 ] ],\n            222: [ [ 1101, 1069 ], [ 39, 34 ] ],\n            188: [ [ 1073, 1041 ], [ 44, 60 ] ],\n            190: [ [ 1102, 1070 ], [ 46, 62 ] ],\n            191: [ [ 46, 44 ], [ 47, 63 ] ]\n        };\n        var special = {\n            50: 64,\n            51: 35,\n            52: 36,\n            53: 37,\n            54: 94,\n            222: 39\n        };\n        var convert = {};\n        var keyCode, i, l;\n        for (keyCode in relation) convert[keyCode] = {};\n        for (i = 0, l = langs.length; i < l; i++) for (keyCode in relation) convert[keyCode][langs[i]] = relation[keyCode][i];\n        var others = lang ? helper.except(langs, [ lang ]) : langs;\n        var j, diff, code, index, added, length, k = others.length;\n        self.exec = function(compute, data) {\n            if (!data.keydown.length) return compute;\n            diff = compute.diff;\n            length = diff.length;\n            var converted = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                code = diff[i];\n                added = false;\n                index = helper.indexOf(map[lang], code);\n                if (index != -1) {\n                    converted.push(code);\n                    continue;\n                }\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(map[others[j]], code);\n                    if (index == -1) continue;\n                    converted.push(map[lang][index]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                if (data.keydown[i].ctrlKey && special[data.keydown[i].keyCode] == code) {\n                    converted.push(code);\n                    continue;\n                }\n                if (!convert[data.keydown[i].keyCode]) break;\n                index = helper.indexOf(convert[data.keydown[i].keyCode][lang], code);\n                if (index != -1) {\n                    converted.push(code);\n                    continue;\n                }\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(convert[data.keydown[i].keyCode][others[j]], code);\n                    if (index == -1) continue;\n                    converted.push(convert[data.keydown[i].keyCode][lang][index]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                data.keydown.splice(i, 1);\n            }\n            compute.diff = converted;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: config.lang ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    command.include = function(config, type) {\n        var self = this;\n        self.type = type;\n        var lang = config.lang || \"\";\n        var presets = [];\n        helper.forEach([ \"numbers\", \"symbols\" ], function(preset) {\n            if (!config[preset]) return;\n            presets.push(preset);\n        });\n        var special = config.special || \"\";\n        var i, l, index;\n        var sources = lang ? [ lang ] : langs;\n        for (i = 0, l = sources.length; i < l; i++) {\n            index = helper.indexOf(presets, sources[i]);\n            if (index != -1) continue;\n            presets.push(sources[i]);\n        }\n        special = helper.textToCodes(special);\n        if (special.length && helper.indexOf(presets, \"special\") == -1) presets.push(\"special\");\n        if (!config.chars) helper.forEach(langs, function(l) {\n            index = helper.indexOf(presets, l);\n            if (index == -1) return;\n            presets.splice(index, 1);\n        });\n        var map = {\n            ru: [ 1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1093, 1098, 1078, 1101, 1073, 1102, 1105, 1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1061, 1066, 1046, 1069, 1041, 1070, 1025 ],\n            en: [ 97, 115, 100, 102, 103, 104, 106, 107, 108, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 122, 120, 99, 118, 98, 110, 109, 65, 83, 68, 70, 71, 72, 74, 75, 76, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 90, 88, 67, 86, 66, 78, 77 ],\n            numbers: [ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 ],\n            symbols: [ 32, 10, 96, 45, 61, 126, 33, 64, 35, 36, 37, 94, 38, 42, 40, 41, 95, 43, 91, 93, 59, 39, 92, 44, 46, 47, 123, 125, 58, 34, 124, 60, 62, 63, 8470 ],\n            special: special\n        };\n        var j, diff, length, added, k = presets.length;\n        self.exec = function(compute, data) {\n            diff = compute.diff;\n            length = diff.length;\n            var allowed = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                added = false;\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(map[presets[j]], diff[i]);\n                    if (index == -1) continue;\n                    allowed.push(diff[i]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                data.keydown.splice(i, 1);\n            }\n            compute.diff = allowed;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: presets.length || special.length ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    command.exclude = function(config, type) {\n        delete config.lang;\n        var self = this;\n        self.type = type;\n        var special = config.special || \"\";\n        special = helper.textToCodes(special);\n        var i, l, index, diff, length;\n        self.exec = function(compute) {\n            diff = compute.diff;\n            length = diff.length;\n            var allowed = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                index = helper.indexOf(special, diff[i]);\n                if (index == -1) allowed.push(diff[i]);\n            }\n            compute.diff = allowed;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: special.length ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    command.input = function(config, type) {\n        var self = this;\n        self.type = type;\n        var lang = config.lang;\n        var register = config.register;\n        var capslock = config.capslock;\n        var map = {\n            ru: {\n                lower: [ 1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1078, 1101, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1093, 1098, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1073, 1102, 1105 ],\n                upper: [ 1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1046, 1069, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1061, 1066, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1041, 1070, 1025 ]\n            },\n            en: {\n                lower: [ 97, 115, 100, 102, 103, 104, 106, 107, 108, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 122, 120, 99, 118, 98, 110, 109 ],\n                upper: [ 65, 83, 68, 70, 71, 72, 74, 75, 76, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 90, 88, 67, 86, 66, 78, 77 ]\n            }\n        };\n        var sources = lang ? [ lang ] : langs;\n        var findhere = helper.except(helper.getOwnPropertyNames(map[sources[0]]), [ register ])[0];\n        var sequence = [ \"register\", \"capslock\" ];\n        var i, l, j, index, diff, added, right, wrong, length, m, k = sources.length, n = sequence.length;\n        var handler = {};\n        handler.register = function(compute) {\n            diff = compute.diff;\n            length = diff.length;\n            var result = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                added = false;\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(map[sources[j]][findhere], diff[i]);\n                    if (index == -1) continue;\n                    result.push(map[sources[j]][register][index]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                result.push(diff[i]);\n            }\n            compute.diff = result;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        handler.capslock = function(compute, data) {\n            if (!data.keydown.length) return compute;\n            diff = compute.diff;\n            length = diff.length;\n            var result = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                added = false;\n                right = register || (data.keydown[i].shiftKey ? \"upper\" : \"lower\");\n                if (register && data.keydown[i].shiftKey) right = \"upper\" == right ? \"lower\" : \"upper\";\n                wrong = \"upper\" == right ? \"lower\" : \"upper\";\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(map[sources[j]][right], diff[i]);\n                    if (index != -1) continue;\n                    index = helper.indexOf(map[sources[j]][wrong], diff[i]);\n                    if (index == -1) continue;\n                    result.push(map[sources[j]][right][index]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                result.push(diff[i]);\n            }\n            compute.diff = result;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        self.exec = function(compute, data) {\n            var result = compute;\n            for (m = 0; m < n; m++) {\n                if (!config[sequence[m]]) continue;\n                result = handler[sequence[m]](result, data);\n            }\n            return result;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: register || capslock ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    command.regexulator = function(config, type) {\n        var self = this;\n        self.type = type;\n        delete config.lang;\n        var templates = {\n            \"after-chars-remove-chars\": \"((?:{0})+)(?:{1})+\",\n            \"after-term-remove-chars\": \"((?:^|\\\\s)+{0}\\\\s+)(?:{1})+\",\n            \"after-chars-remove-term\": \"((?:{0})+)\\\\s+{1}\\\\s+\",\n            \"after-term-remove-term\": \"((?:^|\\\\s)+{0}\\\\s+){1}\\\\s+\",\n            \"before-chars-remove-chars\": \"(?:{1})+((?:{0})+)\",\n            \"before-term-remove-chars\": \"(?:{1})+(\\\\s+{0}\\\\s+)\",\n            \"before-chars-remove-term\": \"(?:^|\\\\s)+{1}\\\\s+((?:{0})+)\",\n            \"before-term-remove-term\": \"(?:^|\\\\s)+{1}\\\\s+({0}\\\\s+)\",\n            \"after-char-remove-repeat\": \"({0}){1}+\",\n            \"after-char-replace-expr\": \"({0}{1})\",\n            \"after-term-replace-expr\": \"(?:^|\\\\s)+({0}\\\\s+{1})\",\n            \"after-char-upper-char\": \"({0}[a-zа-яё])\"\n        };\n        var map = {\n            \"[\": \"\\\\[\",\n            \"]\": \"\\\\]\",\n            \"\\\\\": \"\\\\\\\\\",\n            \"/\": \"\\\\/\",\n            \"^\": \"\\\\^\",\n            $: \"\\\\$\",\n            \".\": \"\\\\.\",\n            \"|\": \"\\\\|\",\n            \"?\": \"\\\\?\",\n            \"*\": \"\\\\*\",\n            \"+\": \"\\\\+\",\n            \"(\": \"\\\\(\",\n            \")\": \"\\\\)\",\n            \"{\": \"\\\\{\",\n            \"}\": \"\\\\}\",\n            \"'\": \"\\\\'\",\n            \"\": \"^\"\n        };\n        var i, l, m, n, removes = {}, interceptions = {}, regexeRemoves = [], regexeInterceptions = [];\n        var mapping = function(c) {\n            return map[c] || c;\n        };\n        var char = function(text) {\n            var chars = text.split(\"\");\n            if (!chars.length) chars.push(\"\");\n            return helper.map(chars, mapping);\n        };\n        var chars = function(val) {\n            return [ char(val).join(\"|\") ];\n        };\n        var term = function(val) {\n            return [ char(val).join(\"\") ];\n        };\n        var template = function(name, arr) {\n            return helper.format(templates[name], arr);\n        };\n        var handler = {};\n        handler[\"after-chars-remove-chars\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(chars(text), function(param) {\n                helper.forEach(chars(config[text]), function(secondparam) {\n                    removes[flag].push(template(name, [ param, secondparam ]));\n                });\n            });\n        };\n        handler[\"after-chars-remove-term\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(chars(text), function(param) {\n                helper.forEach(term(config[text]), function(secondparam) {\n                    removes[flag].push(template(name, [ param, secondparam ]));\n                });\n            });\n        };\n        handler[\"after-term-remove-chars\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(term(text), function(param) {\n                helper.forEach(chars(config[text]), function(secondparam) {\n                    removes[flag].push(template(name, [ param, secondparam ]));\n                });\n            });\n        };\n        handler[\"after-term-remove-term\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(term(text), function(param) {\n                helper.forEach(term(config[text]), function(secondparam) {\n                    removes[flag].push(template(name, [ param, secondparam ]));\n                });\n            });\n        };\n        handler[\"after-char-remove-repeat\"] = function(config, name, flag) {\n            helper.forEach(char(config), function(param) {\n                removes[flag].push(template(name, [ param, param ]));\n            });\n        };\n        handler[\"before-chars-remove-chars\"] = handler[\"after-chars-remove-chars\"];\n        handler[\"before-chars-remove-term\"] = handler[\"after-chars-remove-term\"];\n        handler[\"before-term-remove-chars\"] = handler[\"after-term-remove-chars\"];\n        handler[\"before-term-remove-term\"] = handler[\"after-term-remove-term\"];\n        handler[\"after-char-replace-expr\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(char(text), function(param) {\n                interceptions[flag].push({\n                    expr: template(name, [ param, config[text].expr ]),\n                    replacer: config[text].replacer\n                });\n            });\n        };\n        handler[\"after-char-upper-char\"] = function(config, name, flag) {\n            var obj = {};\n            var arr = helper.isArray(config) ? config : [ config ];\n            for (var j = 0, k = arr.length; j < k; j++) obj[arr[j]] = {\n                expr: \"[a-zа-яё]\",\n                replacer: function(find, c, offset, str, data, noffset) {\n                    if (1 == find.length) str = \"\"; else str = find.charAt(0);\n                    if (!data.keydown.length) return str + find.charAt(find.length - 1).toLocaleUpperCase();\n                    if (data.keydown[noffset].shiftKey) return str + find.charAt(find.length - 1).toLowerCase();\n                    return str + find.charAt(find.length - 1).toLocaleUpperCase();\n                }\n            };\n            handler[\"after-char-replace-expr\"](obj, \"after-char-replace-expr\", flag);\n        };\n        handler[\"after-term-replace-expr\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(term(text), function(param) {\n                interceptions[flag].push({\n                    expr: template(name, [ param, config[text].expr ]),\n                    replacer: config[text].replacer\n                });\n            });\n        };\n        for (var flag in config) {\n            if (/[^igm]/g.test(flag)) throw new Error(\"Command regexulator can not support flag \" + flag);\n            flag = flag.split(\"\").sort().join(\"\");\n            removes[flag] = removes[flag] || [];\n            interceptions[flag] = interceptions[flag] || [];\n            helper.forEach([ \"after-chars-remove-chars\", \"after-term-remove-chars\", \"after-chars-remove-term\", \"after-term-remove-term\", \"before-chars-remove-chars\", \"before-term-remove-chars\", \"before-chars-remove-term\", \"before-term-remove-term\", \"after-char-replace-expr\", \"after-term-replace-expr\", \"after-char-remove-repeat\", \"after-char-upper-char\" ], function(name) {\n                if (void 0 == config[flag][name]) return;\n                handler[name](config[flag][name], name, flag);\n            });\n        }\n        for (flag in removes) {\n            if (!removes[flag].length) continue;\n            regexeRemoves.push({\n                expr: new RegExp(removes[flag].join(\"|\"), flag),\n                replacer: helper.fill(removes[flag].length, function(i) {\n                    return \"$\" + (i + 1);\n                }).join(\"\")\n            });\n        }\n        var selector = function(i) {\n            return i.expr;\n        };\n        for (flag in interceptions) {\n            if (!interceptions[flag].length) continue;\n            regexeInterceptions.push({\n                expr: new RegExp(helper.map(interceptions[flag], selector).join(\"|\"), flag),\n                replacer: interceptions[flag][0].replacer\n            });\n        }\n        var find, c, offset, str;\n        var parseArgs = function(args) {\n            find = args[0];\n            offset = args[args.length - 2];\n            str = args[args.length - 1];\n            for (m = 1, n = args.length - 2; m < n; m++) if (void 0 != args[m]) {\n                c = args[m];\n                break;\n            }\n        };\n        self.exec = function(text, data) {\n            for (i = 0, l = regexeRemoves.length; i < l; i++) text = text.replace(regexeRemoves[i].expr, regexeRemoves[i].replacer);\n            for (i = 0, l = regexeInterceptions.length; i < l; i++) text = text.replace(regexeInterceptions[i].expr, function() {\n                parseArgs(arguments);\n                if (data.cursor.start <= offset + 1 && offset + 1 <= data.cursor.end) {\n                    n = data.before.length + data.diff.length - offset - find.length;\n                    if (!data.keydown[n]) n = 0;\n                    return regexeInterceptions[i].replacer(find, c, offset, str, data, n);\n                }\n                return find;\n            });\n            return text;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: regexeRemoves.length || regexeInterceptions.length ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    var Preprocessor = function(config) {\n        var self = this;\n        var i, l, result, processes = [];\n        var sequence = [ \"layout\", \"include\", \"exclude\", \"input\" ];\n        for (i = 0, l = sequence.length; i < l; i++) {\n            if (!config[sequence[i]]) continue;\n            if (true === config[sequence[i]]) config[sequence[i]] = {};\n            processes.push(new command[sequence[i]](config[sequence[i]], sequence[i]));\n        }\n        for (var j = 0; j < processes.length; j++) if (!processes[j].get().enabled) processes.splice(j--, 1);\n        l = processes.length;\n        self.pass = function(compute, data) {\n            result = compute;\n            for (i = 0, j = data.keydown.length; i < j; i++) {\n                if (!data.keydown[i] || 8 != data.keydown[i].keyCode) continue;\n                data.keydown.splice(i, 1);\n                result.diff.splice(i, 1);\n            }\n            for (i = 0; i < l; i++) result = processes[i].exec(result, data);\n            result.before = helper.codesToText(result.before);\n            result.diff = helper.codesToText(result.diff);\n            result.after = helper.codesToText(result.after);\n            result.offset = compute.offset;\n            return result;\n        };\n        self.config = function() {\n            var info, cfg = {};\n            for (i = 0; i < l; i++) {\n                info = processes[i].get();\n                cfg[info.type] = info.config;\n            }\n            return cfg;\n        };\n        return self;\n    };\n    var Postprocessor = function(config) {\n        var self = this;\n        var i, l, result, length, processes = [];\n        var sequence = [ \"regexulator\" ];\n        for (i = 0, l = sequence.length; i < l; i++) {\n            if (!config[sequence[i]]) continue;\n            if (true === config[sequence[i]]) config[sequence[i]] = {};\n            processes.push(new command[sequence[i]](config[sequence[i]], sequence[i]));\n        }\n        for (var j = 0; j < processes.length; j++) if (!processes[j].get().enabled) processes.splice(j--, 1);\n        l = processes.length;\n        self.pass = function(text, data) {\n            result = text;\n            length = result.length;\n            for (i = 0; i < l; i++) result = processes[i].exec(result, data);\n            data.result.offset += length - result.length;\n            return result;\n        };\n        self.config = function() {\n            var info, cfg = {};\n            for (i = 0; i < l; i++) {\n                info = processes[i].get();\n                cfg[info.type] = info.config;\n            }\n            return cfg;\n        };\n        return self;\n    };\n    var LiveInput = function(config) {\n        var self = this;\n        var lang = config.lang;\n        var interval = config.interval;\n        var preprocessor = new Preprocessor(config);\n        var postprocessor = new Postprocessor(config);\n        var heap = {};\n        var callElementEvent = function(el, name, event) {\n            if (event.old == el.value) return;\n            event.value = el.value;\n            helper.event.call(el, \"liveinput\", event);\n        };\n        var event, eventIndex, eventCount;\n        var callLiveinputEvent = function(el, events, name, ptr, arg) {\n            if (!events[name]) return;\n            event = events[name];\n            for (eventIndex = 0, eventCount = event.length; eventIndex < eventCount; eventIndex++) event[eventIndex].apply(ptr, arg);\n        };\n        var onkeyup = function(e, el, data, cursor, events, ptr) {\n            cursor.release();\n            if (8 == e.keyCode) {\n                data.before = el.value.substring(0, cursor.end);\n                data.diff = \"\";\n                data.after = el.value.substring(cursor.end);\n            } else {\n                data.before = el.value.substring(0, cursor.start);\n                data.diff = el.value.substring(cursor.start, cursor.end);\n                data.after = el.value.substring(cursor.end);\n            }\n            data.result.offset = e.ctrlKey ? -data.diff.length : 8 == e.keyCode && cursor.start == cursor.end + 1 ? 1 : 0;\n            if (e.ctrlKey && hotkeymap.control[e.keyCode]) {\n                data.diff += hotkeymap.control[e.keyCode];\n                data.result.offset--;\n            }\n            if (e.shiftKey) if (hotkeymap.shift[lang] && hotkeymap.shift[lang][e.keyCode]) {\n                data.diff += hotkeymap.shift[lang][e.keyCode];\n                data.result.offset--;\n            }\n            data.result = preprocessor.pass({\n                before: helper.textToCodes(data.before),\n                diff: helper.textToCodes(data.diff),\n                after: helper.textToCodes(data.after),\n                offset: data.result.offset\n            }, data);\n            data.result.value = data.result.before + data.result.diff + data.result.after;\n            data.result.value = postprocessor.pass(data.result.value, data);\n            el.value = data.result.value;\n            callLiveinputEvent(el, events, \"change\", ptr, [ data.result.value, data.old, lang ]);\n            callElementEvent(el, \"liveinput\", ptr.event);\n            ptr.event.old = data.old = el.value;\n            cursor.move(data.result.offset);\n            data.keydown = [];\n            ptr.timer = null;\n            return true;\n        };\n        var refresh = function(el) {\n            if (!el.value.length || !config.refresh) return;\n            var ptr = heap[el.GUID];\n            clearTimeout(ptr.timer);\n            if (!ptr.timer) ptr.cursor.selectAll();\n            onkeyup({\n                keyCode: 0\n            }, el, ptr.data, ptr.cursor, ptr.events, ptr);\n        };\n        var onkeydown = function(e, el, data, cursor, events, ptr) {\n            if (e.ctrlKey) switch (e.keyCode) {\n              case 90:\n              case 67:\n                return false;\n\n              case 89:\n                helper.preventDefault(e);\n                return false;\n\n              case 65:\n                cursor.selectAll();\n                cursor.range = true;\n                break;\n\n              case 8:\n                cursor.moveBack = true;\n            }\n            if (data.mousedown) {\n                helper.preventDefault(e);\n                return false;\n            }\n            if (helper.indexOf(whitelist, e.keyCode) == -1) {\n                if (ptr.timer) refresh(el);\n                return false;\n            }\n            clearTimeout(ptr.timer);\n            data.keydown.push({\n                keyCode: e.keyCode,\n                shiftKey: e.shiftKey,\n                ctrlKey: e.ctrlKey\n            });\n            if (!ptr.timer) cursor.press();\n            ptr.timer = setTimeout(function() {\n                onkeyup(data.keydown[data.keydown.length - 1], el, data, cursor, events, ptr);\n            }, interval);\n            if (e.ctrlKey) if (helper.indexOf(hotkey.control, e.keyCode) != -1) {\n                helper.preventDefault(e);\n                return false;\n            }\n            if (e.shiftKey) if (hotkey.shift[lang] && helper.indexOf(hotkey.shift[lang], e.keyCode) != -1) {\n                helper.preventDefault(e);\n                return false;\n            }\n            return true;\n        };\n        var bind = function(el) {\n            if (!el.GUID) el.GUID = helper.GUID();\n            var ptr = heap[el.GUID] = {};\n            ptr.el = el;\n            ptr.event = {\n                old: \"\"\n            };\n            ptr.data = {\n                keydown: [],\n                result: {},\n                old: \"\"\n            };\n            ptr.cursor = new Cursor(el);\n            var data = ptr.data;\n            var cursor = ptr.data.cursor = ptr.cursor;\n            var events = ptr.events = {};\n            ptr.keydown = function(e) {\n                void 0;\n                onkeydown(e, el, data, cursor, events, ptr);\n            };\n            ptr.paste = function() {\n                void 0;\n                data.keydown = [];\n                return true;\n            };\n            ptr.dragover = function(e) {\n                void 0;\n                helper.preventDefault(e);\n                return false;\n            };\n            ptr.mousedown = function() {\n                void 0;\n                ptr.data.mousedown = true;\n                refresh(el);\n            };\n            ptr.mouseup = function() {\n                void 0;\n                ptr.data.mousedown = false;\n            };\n            ptr.mouseleave = function() {\n                void 0;\n                ptr.data.mousedown = false;\n            };\n            ptr.blur = function() {\n                void 0;\n                refresh(el);\n            };\n            window.ptr = ptr;\n            helper.event.add(el, \"keydown\", ptr.keydown);\n            helper.event.add(el, \"paste\", ptr.paste);\n            helper.event.add(el, \"mousedown\", ptr.mousedown);\n            helper.event.add(el, \"mouseup\", ptr.mouseup);\n            helper.event.add(el, \"mouseleave\", ptr.mouseleave);\n            helper.event.add(el, \"dragover\", ptr.dragover);\n            helper.event.add(el, \"blur\", ptr.blur);\n            refresh(el);\n        };\n        var unbind = function(el) {\n            if (!el.GUID || !heap[el.GUID]) return;\n            var ptr = heap[el.GUID];\n            helper.event.remove(el, \"keydown\", ptr.keydown);\n            helper.event.remove(el, \"paste\", ptr.paste);\n            helper.event.remove(el, \"mousedown\", ptr.mousedown);\n            helper.event.remove(el, \"mouseup\", ptr.mouseup);\n            helper.event.remove(el, \"mouseleave\", ptr.mouseleave);\n            helper.event.remove(el, \"dragover\", ptr.dragover);\n            helper.event.remove(el, \"blur\", ptr.blur);\n            var events = ptr.events;\n            for (var name in events) {\n                events[name].length = 0;\n                delete events[name];\n            }\n            var props = helper.getOwnPropertyNames(ptr);\n            for (var prop in props) delete ptr[prop];\n            delete heap[el.GUID];\n            if (!helper.getOwnPropertyNames(heap).length) {\n                var key = JSON.stringify(config);\n                delete cache[key];\n            }\n        };\n        self.bind = function() {\n            for (var i = 0, l = arguments.length; i < l; i++) bind(arguments[i]);\n            return self;\n        };\n        self.unbind = function() {\n            for (var i = 0, l = arguments.length; i < l; i++) unbind(arguments[i]);\n            return self;\n        };\n        self.on = function(event, el, cb) {\n            if (!el.GUID || !heap[el.GUID]) return self;\n            heap[el.GUID].events[event] = heap[el.GUID].events[event] || [];\n            heap[el.GUID].events[event].push(cb);\n            switch (event) {\n              case \"change\":\n                if (el.value.length) refresh(el);\n            }\n            return self;\n        };\n        self.off = function(event, el, cb) {\n            if (!el.GUID || !heap[el.GUID]) return self;\n            eventIndex = helper.indexOf(heap[el.GUID].events[event], cb);\n            if (eventIndex == -1) return self;\n            heap[el.GUID].events[event].splice(eventIndex, 1);\n            return self;\n        };\n        self.refresh = function(el) {\n            if (!heap[el.GUID]) return;\n            refresh(el);\n        };\n        return self;\n    };\n    var setLang = function(config) {\n        if (\"undefined\" == typeof config.lang) return;\n        var lang = config.lang;\n        for (var p in config) {\n            if (!config[p]) continue;\n            if (true == config[p]) config[p] = {};\n            config[p].lang = lang;\n        }\n    };\n    var mergeConfig = function(a, b) {\n        if (!b) return a;\n        for (var p in b) if (\"object\" == typeof a[p]) a[p] = mergeConfig(a[p], b[p]); else a[p] = b[p];\n        return a;\n    };\n    var cache = {};\n    var types = {\n        \"default\": {\n            lang: \"\",\n            interval: 1e3 / 24,\n            refresh: true,\n            layout: true,\n            include: {\n                chars: true,\n                numbers: true,\n                symbols: true,\n                special: \"\"\n            },\n            exclude: {\n                special: \"{}[]\"\n            },\n            input: {\n                register: \"\",\n                capslock: false\n            },\n            regexulator: {\n                g: {}\n            }\n        },\n        fio: function() {\n            var special = \" '-\";\n            return {\n                include: {\n                    numbers: false,\n                    symbols: false,\n                    special: special\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": special,\n                        \"after-char-upper-char\": [ \"'\", \"\" ],\n                        \"after-chars-remove-chars\": {\n                            \"\": special\n                        }\n                    }\n                }\n            };\n        }(),\n        numeric: {\n            include: {\n                chars: false,\n                numbers: true,\n                symbols: false,\n                special: \"\"\n            }\n        },\n        address: function() {\n            var special = \"-/\";\n            return {\n                lang: \"\",\n                include: {\n                    symbols: false,\n                    special: special\n                },\n                input: {\n                    register: \"upper\",\n                    capslock: true\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": special,\n                        \"after-chars-remove-chars\": {\n                            \"\": special\n                        }\n                    }\n                }\n            };\n        }(),\n        month: {\n            interval: 700,\n            include: {\n                numbers: true,\n                symbols: false\n            },\n            input: {\n                capslock: false\n            },\n            regexulator: {\n                g: {\n                    \"after-char-remove-repeat\": \"0\",\n                    \"after-char-upper-char\": \"\"\n                }\n            }\n        }\n    };\n    var configuration = function(config) {\n        mergeConfig(types, config);\n    };\n    configuration.get = function(name) {\n        return helper.copy(types[name]);\n    };\n    configuration.merge = function() {\n        var config = configuration.get(\"default\");\n        for (var i = 0, l = arguments.length; i < l; i++) {\n            if (\"default\" == arguments[i]) continue;\n            var options = arguments[i];\n            if (\"string\" == typeof options) {\n                if (!types[options]) throw new Error(\"Can not find liveinput type \" + options);\n                options = types[options];\n            }\n            mergeConfig(config, options);\n        }\n        return config;\n    };\n    configuration.add = function(name, config) {\n        if (types[name]) throw new Error(\"Can not add exist liveinput type \" + name);\n        types[name] = config;\n    };\n    var init = function(name, options) {\n        if (\"object\" == typeof name || \"undefined\" == typeof name) {\n            options = name;\n            name = \"default\";\n        }\n        var config = configuration.merge(name, options);\n        setLang(config);\n        var key = JSON.stringify(config);\n        var instance = cache[key] || (cache[key] = new LiveInput(config));\n        return instance;\n    };\n    var set = function(el, value) {\n        el.value = value;\n        for (var key in cache) cache[key].refresh(el);\n    };\n    return {\n        init: init,\n        configuration: configuration,\n        set: set\n    };\n}();\n\nif (\"undefined\" != typeof module) module.exports = liveinput; else if (window) window.liveinput = liveinput;"],"sourceRoot":"/source/"}