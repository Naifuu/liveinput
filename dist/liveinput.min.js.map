{"version":3,"sources":["liveinput.js"],"names":["liveinput","hotkeymap","parseCode","keymapper","hotkey","command","Preprocessor","Postprocessor","LiveInput","setLang","mergeConfig","init","configuration","cache","types","helper","rnd","Math","random","bind","Function","prototype","func","thisArg","slice","Array","args","call","arguments","apply","concat","extrude","filter","arr","cb","i","l","res","length","push","map","forEach","indexOf","v","except","target","remove","charToCode","c","charCodeAt","textToCodes","text","split","codesToText","codes","String","fromCharCode","addEvent","el","event","addEventListener","attachEvent","removeEvent","removeEventListener","detachEvent","guidchar","toString","guid","replace","format","arg","RegExp","fill","getSelectionStart","selectionStart","r","document","selection","createRange","duplicate","moveEnd","value","lastIndexOf","getSelectionEnd","range","end","startRange","pos","selectionEnd","body","createTextRange","moveToElementText","compareEndPoints","element","setCaretPosition","setSelectionRange","start","collapse","moveStart","select","getOwnPropertyNames","obj","p","props","hasOwnProperty","isArray","Object","extend","a","b","callEvent","e","createEvent","initEvent","dispatchEvent","createEventObject","setTimeout","fireEvent","ex","preventDefault","returnValue","GUID","add","Cursor","maxpos","self","this","max","press","release","change","move","offset","refresh","langs","whitelist","additional","keyCodes","charCodes","control",50,51,52,53,54,55,222,"code","parseInt","layout","config","type","lang","relation","special","convert","keyCode","others","j","diff","index","added","k","ru","en",186,188,190,191,"exec","compute","data","keydown","converted","ctrlKey","splice","get","enabled","include","presets","sources","preset","chars","numbers","symbols","allowed","exclude","input","register","capslock","findhere","sequence","right","wrong","m","n","handler","lower","upper","result","shiftKey","regexulator","templates","removes","interceptions","regexeRemoves","regexeInterceptions","mapping","char","term","template","flag","selector","find","str","parseArgs","after-chars-remove-chars","after-term-remove-chars","after-chars-remove-term","after-term-remove-term","before-chars-remove-chars","before-term-remove-chars","before-chars-remove-term","before-term-remove-term","after-char-remove-repeat","after-char-replace-expr","after-term-replace-expr","after-char-upper-char","[","]","\\","/","^","$",".","|","?","*","+","(",")","{","}","'","val","join","name","param","secondparam","expr","replacer","noffset","toLowerCase","toLocaleUpperCase","test","Error","sort","cursor","before","processes","pass","after","info","cfg","eventIndex","eventCount","interval","preprocessor","postprocessor","heap","callevents","events","ptr","old","onkeyup","substring","timer","clearTimeout","onkeydown","mousedown","paste","dragover","mouseup","mouseleave","blur","unbind","key","JSON","stringify","on","off","options","default","instance","g","fio","numeric","place","peopled-place","address","month","passport-issue","international-passport-issue","international-document-serial","document-issue","module","exports","window"],"mappings":"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","file":"liveinput.min.js","sourcesContent":["/**\n * liveinput - Input text auto changer\n * @version v1.0.4\n * @link https://github.com/vahpetr/liveinput/\n * @license Apache-2.0\n */\nvar liveinput = new function() {\n    var helper = function() {\n        return new function() {\n            var rnd = Math.random;\n            var bind = Function.prototype.bind ? function(func, thisArg) {\n                return func.bind(thisArg);\n            } : function(func, thisArg) {\n                var slice = Array.prototype.slice, args = slice.call(arguments, 2);\n                return function() {\n                    return func.apply(thisArg, args.concat(slice.call(arguments)));\n                };\n            };\n            var extrude = function(thisArg) {\n                return bind(Function.prototype.call, thisArg);\n            };\n            var filter = Array.prototype.filter ? extrude(Array.prototype.filter) : function(arr, cb) {\n                var i, l, res = [];\n                for (i = 0, l = arr.length; i < l; i++) if (cb(arr[i], i, arr)) res.push(arr[i]);\n                return res;\n            };\n            var map = Array.prototype.map ? extrude(Array.prototype.map) : function(arr, cb) {\n                var i, l, res = [];\n                for (i = 0, l = arr.length; i < l; i++) res.push(cb(arr[i], i, arr));\n                return res;\n            };\n            var forEach = Array.prototype.forEach ? extrude(Array.prototype.forEach) : function(arr, cb) {\n                for (var i = 0, l = arr.length; i < l; i++) cb(arr[i], i, arr);\n            };\n            var indexOf = Array.prototype.indexOf ? extrude(Array.prototype.indexOf) : function(arr, v) {\n                var i, l;\n                for (i = 0, l = arr.length; i < l; i++) if (arr[i] == v) return i;\n                return -1;\n            };\n            var except = function(target, remove) {\n                return filter(target, function(i) {\n                    return indexOf(remove, i) == -1;\n                });\n            };\n            var charToCode = function(c) {\n                return c.charCodeAt();\n            };\n            var textToCodes = function(text) {\n                return map(text.split(\"\"), charToCode);\n            };\n            var codesToText = function(codes) {\n                return String.fromCharCode.apply(void 0, codes);\n            };\n            var addEvent = function(el, event, cb) {\n                if (el.addEventListener) return el.addEventListener(event, cb, true);\n                return el.attachEvent(\"on\" + event, cb);\n            };\n            var removeEvent = function(el, event, cb) {\n                if (el.removeEventListener) return el.removeEventListener(event, cb, true);\n                return el.detachEvent(\"on\" + event, cb);\n            };\n            var guidchar = function() {\n                return (16 * rnd() | 0).toString(16);\n            };\n            var guid = function() {\n                return \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\".replace(/x/g, guidchar);\n            };\n            var format = function(text, arg) {\n                for (var i = 0, l = arg.length; i < l; i++) text = text.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), arg[i]);\n                return text;\n            };\n            var fill = function(l, cb) {\n                var res = [];\n                for (var i = 0; i < l; i++) res.push(cb(i, l, res));\n                return res;\n            };\n            var getSelectionStart = function(el) {\n                if (el.selectionStart) return el.selectionStart;\n                var r = document.selection.createRange().duplicate();\n                r.moveEnd(\"character\", el.value.length);\n                if (\"\" == r.text) return el.value.length;\n                return el.value.lastIndexOf(r.text);\n            };\n            var getSelectionEnd = function(el) {\n                if (el.selectionEnd) return el.selectionEnd;\n                var range = document.selection.createRange();\n                var end = -1;\n                if (el.value.indexOf(\"\\r\") < 0) {\n                    var startRange = el.document.body.createTextRange();\n                    startRange.moveToElementText(el);\n                    if (!range.compareEndPoints(\"endToEnd\", startRange)) end++;\n                }\n                end -= range.moveEnd(\"character\", -el.value.length);\n                var pos = -1;\n                do {\n                    pos = element.value.indexOf(\"\\r\", pos + 1);\n                    if (pos >= 0 && end > pos) end++;\n                } while (pos >= 0 && pos < end);\n                return end;\n            };\n            var setCaretPosition = function(el, pos) {\n                if (el.setSelectionRange) return el.setSelectionRange(pos.start, pos.end);\n                var range = el.createTextRange();\n                range.collapse(true);\n                range.moveStart(\"character\", pos.start);\n                range.moveEnd(\"character\", pos.end);\n                range.select();\n            };\n            var getOwnPropertyNames = function(obj) {\n                var props = [];\n                for (var p in obj) if (obj.hasOwnProperty(p)) props.push(p);\n                return props;\n            };\n            var isArray = Array.isArray || function(arg) {\n                return \"[object Array]\" === Object.prototype.toString.call(arg);\n            };\n            var extend = function(a, b) {\n                if (!b) return;\n                for (var p in b) a[p] = b[p];\n            };\n            var callEvent = function(el, event, obj) {\n                var e;\n                if (document.createEvent) {\n                    e = document.createEvent(\"HTMLEvents\");\n                    extend(e, obj);\n                    e.initEvent(event, false, false);\n                    return el.dispatchEvent(e);\n                }\n                e = document.createEventObject();\n                extend(e, obj);\n                setTimeout(function() {\n                    try {\n                        el.fireEvent(\"on\" + event, e);\n                    } catch (ex) {}\n                }, 0);\n            };\n            var preventDefault = function(e) {\n                e.preventDefault ? e.preventDefault() : e.returnValue = false;\n            };\n            return {\n                charToCode: charToCode,\n                textToCodes: textToCodes,\n                codesToText: codesToText,\n                GUID: guid,\n                format: format,\n                fill: fill,\n                getSelectionStart: getSelectionStart,\n                getSelectionEnd: getSelectionEnd,\n                setCaretPosition: setCaretPosition,\n                getOwnPropertyNames: getOwnPropertyNames,\n                bind: bind,\n                filter: filter,\n                map: map,\n                forEach: forEach,\n                except: except,\n                indexOf: indexOf,\n                isArray: isArray,\n                event: {\n                    add: addEvent,\n                    remove: removeEvent,\n                    call: callEvent\n                },\n                preventDefault: preventDefault\n            };\n        }();\n    }();\n    var Cursor = function(el) {\n        var self = this;\n        var max = Math.max;\n        self.start = 0;\n        self.end = 0;\n        self.press = function() {\n            self.end = self.start = helper.getSelectionStart(el);\n        };\n        self.release = function() {\n            self.end = helper.getSelectionEnd(el);\n        };\n        self.change = function() {\n            self.start = helper.getSelectionStart(el);\n            self.end = helper.getSelectionEnd(el);\n        };\n        var maxpos;\n        self.move = function(offset) {\n            maxpos = max(self.start - offset, self.end - offset);\n            helper.setCaretPosition(el, {\n                start: maxpos,\n                end: maxpos\n            });\n            self.press();\n        };\n        self.refresh = function() {\n            helper.setCaretPosition(el, {\n                start: 0,\n                end: el.value.length\n            });\n            self.change();\n        };\n        return self;\n    };\n    var langs = [ \"ru\", \"en\" ];\n    var whitelist = [ 192, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 187, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 219, 221, 65, 83, 68, 70, 71, 72, 74, 75, 76, 186, 222, 220, 226, 90, 88, 67, 86, 66, 78, 77, 188, 190, 191, 111, 106, 109, 107, 12 ];\n    var additional = {\n        keyCodes: [ 32, 13, 8 ],\n        charCodes: [ 32, 10 ]\n    };\n    whitelist.push.apply(whitelist, additional.keyCodes);\n    var hotkeymap = {\n        control: {\n            50: \"@\",\n            51: \"#\",\n            52: \"$\",\n            53: \"%\",\n            54: \"^\",\n            55: \"&\",\n            222: \"'\"\n        }\n    };\n    var parseCode = function(code) {\n        return parseInt(code, 10);\n    };\n    var keymapper = function(map) {\n        var props = helper.getOwnPropertyNames(map);\n        return helper.map(props, parseCode);\n    };\n    var hotkey = {\n        control: keymapper(hotkeymap.control)\n    };\n    var command = {};\n    command.layout = function(config, type) {\n        var self = this;\n        self.type = type;\n        var lang = config.lang;\n        var map = {\n            ru: [ 1105, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1025, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1093, 1098, 92, 49, 51, 53, 56, 57, 48, 45, 61, 1061, 1066, 47, 33, 8470, 37, 42, 40, 41, 95, 43 ],\n            en: [ 96, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 97, 115, 100, 102, 103, 104, 106, 107, 108, 122, 120, 99, 118, 98, 110, 109, 126, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 65, 83, 68, 70, 71, 72, 74, 75, 76, 90, 88, 67, 86, 66, 78, 77, 91, 93, 92, 49, 51, 53, 56, 57, 48, 45, 61, 123, 125, 124, 33, 35, 37, 42, 40, 41, 95, 43 ]\n        };\n        for (var p in map) map[p].push.apply(map[p], additional.charCodes);\n        var relation = {\n            50: [ [ 50, 34 ], [ 50, 64 ] ],\n            52: [ [ 52, 59 ], [ 52, 36 ] ],\n            54: [ [ 54, 58 ], [ 54, 94 ] ],\n            55: [ [ 55, 63 ], [ 55, 38 ] ],\n            186: [ [ 1078, 1046 ], [ 59, 58 ] ],\n            222: [ [ 1101, 1069 ], [ 39, 34 ] ],\n            188: [ [ 1073, 1041 ], [ 44, 60 ] ],\n            190: [ [ 1102, 1070 ], [ 46, 62 ] ],\n            191: [ [ 46, 44 ], [ 47, 63 ] ]\n        };\n        var special = {\n            50: 64,\n            51: 35,\n            52: 36,\n            53: 37,\n            54: 94,\n            222: 39\n        };\n        var convert = {};\n        var keyCode, i, l;\n        for (keyCode in relation) convert[keyCode] = {};\n        for (i = 0, l = langs.length; i < l; i++) for (keyCode in relation) convert[keyCode][langs[i]] = relation[keyCode][i];\n        var others = lang ? helper.except(langs, [ lang ]) : langs;\n        var j, diff, code, index, added, length, k = others.length;\n        self.exec = function(compute, data) {\n            if (!data.keydown.length) return compute;\n            diff = compute.diff;\n            length = diff.length;\n            var converted = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                code = diff[i];\n                added = false;\n                index = helper.indexOf(map[lang], code);\n                if (index != -1) {\n                    converted.push(code);\n                    continue;\n                }\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(map[others[j]], code);\n                    if (index == -1) continue;\n                    converted.push(map[lang][index]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                if (data.keydown[i].ctrlKey && special[data.keydown[i].keyCode] == code) {\n                    converted.push(code);\n                    continue;\n                }\n                if (!convert[data.keydown[i].keyCode]) break;\n                index = helper.indexOf(convert[data.keydown[i].keyCode][lang], code);\n                if (index != -1) {\n                    converted.push(code);\n                    continue;\n                }\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(convert[data.keydown[i].keyCode][others[j]], code);\n                    if (index == -1) continue;\n                    converted.push(convert[data.keydown[i].keyCode][lang][index]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                data.keydown.splice(i, 1);\n            }\n            compute.diff = converted;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: config.lang ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    command.include = function(config, type) {\n        var self = this;\n        self.type = type;\n        var lang = config.lang || \"\";\n        var presets = [];\n        helper.forEach([ \"numbers\", \"symbols\" ], function(preset) {\n            if (!config[preset]) return;\n            presets.push(preset);\n        });\n        var special = config.special || \"\";\n        var i, l, index;\n        var sources = lang ? [ lang ] : langs;\n        for (i = 0, l = sources.length; i < l; i++) {\n            index = helper.indexOf(presets, sources[i]);\n            if (index != -1) continue;\n            presets.push(sources[i]);\n        }\n        special = helper.textToCodes(special);\n        if (special.length && helper.indexOf(presets, \"special\") == -1) presets.push(\"special\");\n        if (!config.chars) helper.forEach(langs, function(l) {\n            index = helper.indexOf(presets, l);\n            if (index == -1) return;\n            presets.splice(index, 1);\n        });\n        var map = {\n            ru: [ 1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1093, 1098, 1078, 1101, 1073, 1102, 1105, 1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1061, 1066, 1046, 1069, 1041, 1070, 1025 ],\n            en: [ 97, 115, 100, 102, 103, 104, 106, 107, 108, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 122, 120, 99, 118, 98, 110, 109, 65, 83, 68, 70, 71, 72, 74, 75, 76, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 90, 88, 67, 86, 66, 78, 77 ],\n            numbers: [ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 ],\n            symbols: [ 32, 10, 96, 45, 61, 126, 33, 64, 35, 36, 37, 94, 38, 42, 40, 41, 95, 43, 91, 93, 59, 39, 92, 44, 46, 47, 123, 125, 58, 34, 124, 60, 62, 63, 8470 ],\n            special: special\n        };\n        var j, diff, length, added, k = presets.length;\n        self.exec = function(compute, data) {\n            diff = compute.diff;\n            length = diff.length;\n            var allowed = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                added = false;\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(map[presets[j]], diff[i]);\n                    if (index == -1) continue;\n                    allowed.push(diff[i]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                data.keydown.splice(i, 1);\n            }\n            compute.diff = allowed;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: presets.length || special.length ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    command.exclude = function(config, type) {\n        delete config.lang;\n        var self = this;\n        self.type = type;\n        var special = config.special || \"\";\n        special = helper.textToCodes(special);\n        var i, l, index, diff, length;\n        self.exec = function(compute) {\n            diff = compute.diff;\n            length = diff.length;\n            var allowed = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                index = helper.indexOf(special, diff[i]);\n                if (index == -1) allowed.push(diff[i]);\n            }\n            compute.diff = allowed;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: special.length ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    command.input = function(config, type) {\n        var self = this;\n        self.type = type;\n        var lang = config.lang;\n        var register = config.register;\n        var capslock = config.capslock;\n        var map = {\n            ru: {\n                lower: [ 1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1078, 1101, 1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1093, 1098, 1103, 1095, 1089, 1084, 1080, 1090, 1100, 1073, 1102, 1105 ],\n                upper: [ 1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1046, 1069, 1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1061, 1066, 1071, 1063, 1057, 1052, 1048, 1058, 1068, 1041, 1070, 1025 ]\n            },\n            en: {\n                lower: [ 97, 115, 100, 102, 103, 104, 106, 107, 108, 113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 122, 120, 99, 118, 98, 110, 109 ],\n                upper: [ 65, 83, 68, 70, 71, 72, 74, 75, 76, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 90, 88, 67, 86, 66, 78, 77 ]\n            }\n        };\n        var sources = lang ? [ lang ] : langs;\n        var findhere = helper.except(helper.getOwnPropertyNames(map[sources[0]]), [ register ])[0];\n        var sequence = [ \"register\", \"capslock\" ];\n        var i, l, j, index, diff, added, right, wrong, length, m, k = sources.length, n = sequence.length;\n        var handler = {};\n        handler.register = function(compute) {\n            diff = compute.diff;\n            length = diff.length;\n            var result = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                added = false;\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(map[sources[j]][findhere], diff[i]);\n                    if (index == -1) continue;\n                    result.push(map[sources[j]][register][index]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                result.push(diff[i]);\n            }\n            compute.diff = result;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        handler.capslock = function(compute, data) {\n            if (!data.keydown.length) return compute;\n            diff = compute.diff;\n            length = diff.length;\n            var result = [];\n            for (i = 0, l = diff.length; i < l; i++) {\n                added = false;\n                right = register || (data.keydown[i].shiftKey ? \"upper\" : \"lower\");\n                if (register && data.keydown[i].shiftKey) right = \"upper\" == right ? \"lower\" : \"upper\";\n                wrong = \"upper\" == right ? \"lower\" : \"upper\";\n                for (j = 0; j < k; j++) {\n                    index = helper.indexOf(map[sources[j]][right], diff[i]);\n                    if (index != -1) continue;\n                    index = helper.indexOf(map[sources[j]][wrong], diff[i]);\n                    if (index == -1) continue;\n                    result.push(map[sources[j]][right][index]);\n                    added = true;\n                    break;\n                }\n                if (added) continue;\n                result.push(diff[i]);\n            }\n            compute.diff = result;\n            compute.offset += length - compute.diff.length;\n            return compute;\n        };\n        self.exec = function(compute, data) {\n            var result = compute;\n            for (m = 0; m < n; m++) {\n                if (!config[sequence[m]]) continue;\n                result = handler[sequence[m]](result, data);\n            }\n            return result;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: register || capslock ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    command.regexulator = function(config, type) {\n        var self = this;\n        self.type = type;\n        delete config.lang;\n        var templates = {\n            \"after-chars-remove-chars\": \"((?:{0})+)(?:{1})+\",\n            \"after-term-remove-chars\": \"((?:^|\\\\s)+{0}\\\\s+)(?:{1})+\",\n            \"after-chars-remove-term\": \"((?:{0})+)\\\\s+{1}\\\\s+\",\n            \"after-term-remove-term\": \"((?:^|\\\\s)+{0}\\\\s+){1}\\\\s+\",\n            \"before-chars-remove-chars\": \"(?:{1})+((?:{0})+)\",\n            \"before-term-remove-chars\": \"(?:{1})+(\\\\s+{0}\\\\s+)\",\n            \"before-chars-remove-term\": \"(?:^|\\\\s)+{1}\\\\s+((?:{0})+)\",\n            \"before-term-remove-term\": \"(?:^|\\\\s)+{1}\\\\s+({0}\\\\s+)\",\n            \"after-char-remove-repeat\": \"({0}){1}+\",\n            \"after-char-replace-expr\": \"({0}{1})\",\n            \"after-term-replace-expr\": \"(?:^|\\\\s)+({0}\\\\s+{1})\",\n            \"after-char-upper-char\": \"({0}[a-zа-яё])\"\n        };\n        var map = {\n            \"[\": \"\\\\[\",\n            \"]\": \"\\\\]\",\n            \"\\\\\": \"\\\\\\\\\",\n            \"/\": \"\\\\/\",\n            \"^\": \"\\\\^\",\n            $: \"\\\\$\",\n            \".\": \"\\\\.\",\n            \"|\": \"\\\\|\",\n            \"?\": \"\\\\?\",\n            \"*\": \"\\\\*\",\n            \"+\": \"\\\\+\",\n            \"(\": \"\\\\(\",\n            \")\": \"\\\\)\",\n            \"{\": \"\\\\{\",\n            \"}\": \"\\\\}\",\n            \"'\": \"\\\\'\",\n            \"\": \"^\"\n        };\n        var i, l, m, n, removes = {}, interceptions = {}, regexeRemoves = [], regexeInterceptions = [];\n        var mapping = function(c) {\n            return map[c] || c;\n        };\n        var char = function(text) {\n            var chars = text.split(\"\");\n            if (!chars.length) chars.push(\"\");\n            return helper.map(chars, mapping);\n        };\n        var chars = function(val) {\n            return [ char(val).join(\"|\") ];\n        };\n        var term = function(val) {\n            return [ char(val).join(\"\") ];\n        };\n        var template = function(name, arr) {\n            return helper.format(templates[name], arr);\n        };\n        var handler = {};\n        handler[\"after-chars-remove-chars\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(chars(text), function(param) {\n                helper.forEach(chars(config[text]), function(secondparam) {\n                    removes[flag].push(template(name, [ param, secondparam ]));\n                });\n            });\n        };\n        handler[\"after-chars-remove-term\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(chars(text), function(param) {\n                helper.forEach(term(config[text]), function(secondparam) {\n                    removes[flag].push(template(name, [ param, secondparam ]));\n                });\n            });\n        };\n        handler[\"after-term-remove-chars\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(term(text), function(param) {\n                helper.forEach(chars(config[text]), function(secondparam) {\n                    removes[flag].push(template(name, [ param, secondparam ]));\n                });\n            });\n        };\n        handler[\"after-term-remove-term\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(term(text), function(param) {\n                helper.forEach(term(config[text]), function(secondparam) {\n                    removes[flag].push(template(name, [ param, secondparam ]));\n                });\n            });\n        };\n        handler[\"after-char-remove-repeat\"] = function(config, name, flag) {\n            helper.forEach(char(config), function(param) {\n                removes[flag].push(template(name, [ param, param ]));\n            });\n        };\n        handler[\"before-chars-remove-chars\"] = handler[\"after-chars-remove-chars\"];\n        handler[\"before-chars-remove-term\"] = handler[\"after-chars-remove-term\"];\n        handler[\"before-term-remove-chars\"] = handler[\"after-term-remove-chars\"];\n        handler[\"before-term-remove-term\"] = handler[\"after-term-remove-term\"];\n        handler[\"after-char-replace-expr\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(char(text), function(param) {\n                interceptions[flag].push({\n                    expr: template(name, [ param, config[text].expr ]),\n                    replacer: config[text].replacer\n                });\n            });\n        };\n        handler[\"after-char-upper-char\"] = function(config, name, flag) {\n            var obj = {};\n            var arr = helper.isArray(config) ? config : [ config ];\n            for (var j = 0, k = arr.length; j < k; j++) obj[arr[j]] = {\n                expr: \"[a-zа-яё]\",\n                replacer: function(find, c, offset, str, data, noffset) {\n                    if (1 == find.length) str = \"\"; else str = find[0];\n                    if (!data.keydown.length) return str + find[find.length - 1].toLocaleUpperCase();\n                    if (data.keydown[noffset].shiftKey) return str + find[find.length - 1].toLowerCase();\n                    return str + find[find.length - 1].toLocaleUpperCase();\n                }\n            };\n            handler[\"after-char-replace-expr\"](obj, \"after-char-replace-expr\", flag);\n        };\n        handler[\"after-term-replace-expr\"] = function(config, name, flag) {\n            for (var text in config) helper.forEach(term(text), function(param) {\n                interceptions[flag].push({\n                    expr: template(name, [ param, config[text].expr ]),\n                    replacer: config[text].replacer\n                });\n            });\n        };\n        for (var flag in config) {\n            if (/[^igm]/g.test(flag)) throw new Error(\"Command regexulator can not support flag \" + flag);\n            flag = flag.split(\"\").sort().join(\"\");\n            removes[flag] = removes[flag] || [];\n            interceptions[flag] = interceptions[flag] || [];\n            helper.forEach([ \"after-chars-remove-chars\", \"after-term-remove-chars\", \"after-chars-remove-term\", \"after-term-remove-term\", \"before-chars-remove-chars\", \"before-term-remove-chars\", \"before-chars-remove-term\", \"before-term-remove-term\", \"after-char-replace-expr\", \"after-term-replace-expr\", \"after-char-remove-repeat\", \"after-char-upper-char\" ], function(name) {\n                if (void 0 == config[flag][name]) return;\n                handler[name](config[flag][name], name, flag);\n            });\n        }\n        for (flag in removes) {\n            if (!removes[flag].length) continue;\n            regexeRemoves.push({\n                expr: new RegExp(removes[flag].join(\"|\"), flag),\n                replacer: helper.fill(removes[flag].length, function(i) {\n                    return \"$\" + (i + 1);\n                }).join(\"\")\n            });\n        }\n        var selector = function(i) {\n            return i.expr;\n        };\n        for (flag in interceptions) {\n            if (!interceptions[flag].length) continue;\n            regexeInterceptions.push({\n                expr: new RegExp(helper.map(interceptions[flag], selector).join(\"|\"), flag),\n                replacer: interceptions[flag][0].replacer\n            });\n        }\n        var find, c, offset, str;\n        var parseArgs = function(args) {\n            find = args[0];\n            offset = args[args.length - 2];\n            str = args[args.length - 1];\n            for (m = 1, n = args.length - 2; m < n; m++) if (void 0 != args[m]) {\n                c = args[m];\n                break;\n            }\n        };\n        self.exec = function(text, data) {\n            for (i = 0, l = regexeRemoves.length; i < l; i++) text = text.replace(regexeRemoves[i].expr, regexeRemoves[i].replacer);\n            for (i = 0, l = regexeInterceptions.length; i < l; i++) text = text.replace(regexeInterceptions[i].expr, function() {\n                parseArgs(arguments);\n                if (data.cursor.start <= offset + 1 && offset + 1 <= data.cursor.end) {\n                    n = data.before.length + data.diff.length - offset - find.length;\n                    if (!data.keydown[n]) n = 0;\n                    return regexeInterceptions[i].replacer(find, c, offset, str, data, n);\n                }\n                return find;\n            });\n            return text;\n        };\n        self.get = function() {\n            return {\n                type: type,\n                enabled: regexeRemoves.length || regexeInterceptions.length ? true : false,\n                config: config\n            };\n        };\n        return self;\n    };\n    var Preprocessor = function(config) {\n        var self = this;\n        var i, l, result, processes = [];\n        var sequence = [ \"layout\", \"include\", \"exclude\", \"input\" ];\n        for (i = 0, l = sequence.length; i < l; i++) {\n            if (!config[sequence[i]]) continue;\n            if (true === config[sequence[i]]) config[sequence[i]] = {};\n            processes.push(new command[sequence[i]](config[sequence[i]], sequence[i]));\n        }\n        for (var j = 0; j < processes.length; j++) if (!processes[j].get().enabled) processes.splice(j--, 1);\n        l = processes.length;\n        self.pass = function(compute, data) {\n            result = compute;\n            for (i = 0; i < l; i++) result = processes[i].exec(result, data);\n            result.before = helper.codesToText(result.before);\n            result.diff = helper.codesToText(result.diff);\n            result.after = helper.codesToText(result.after);\n            result.offset = compute.offset;\n            return result;\n        };\n        self.config = function() {\n            var info, cfg = {};\n            for (i = 0; i < l; i++) {\n                info = processes[i].get();\n                cfg[info.type] = info.config;\n            }\n            return cfg;\n        };\n        return self;\n    };\n    var Postprocessor = function(config) {\n        var self = this;\n        var i, l, result, length, processes = [];\n        var sequence = [ \"regexulator\" ];\n        for (i = 0, l = sequence.length; i < l; i++) {\n            if (!config[sequence[i]]) continue;\n            if (true === config[sequence[i]]) config[sequence[i]] = {};\n            processes.push(new command[sequence[i]](config[sequence[i]], sequence[i]));\n        }\n        for (var j = 0; j < processes.length; j++) if (!processes[j].get().enabled) processes.splice(j--, 1);\n        l = processes.length;\n        self.pass = function(text, data) {\n            result = text;\n            length = result.length;\n            for (i = 0; i < l; i++) result = processes[i].exec(result, data);\n            data.result.offset += length - result.length;\n            return result;\n        };\n        self.config = function() {\n            var info, cfg = {};\n            for (i = 0; i < l; i++) {\n                info = processes[i].get();\n                cfg[info.type] = info.config;\n            }\n            return cfg;\n        };\n        return self;\n    };\n    var LiveInput = function(config) {\n        var self = this;\n        var lang = config.lang;\n        var interval = config.interval;\n        var preprocessor = new Preprocessor(config);\n        var postprocessor = new Postprocessor(config);\n        var heap = {};\n        var event, eventIndex, eventCount;\n        var callevents = function(el, events, name, ptr, arg) {\n            if (!events[name]) return;\n            event = events[name];\n            for (eventIndex = 0, eventCount = event.length; eventIndex < eventCount; eventIndex++) event[eventIndex].apply(ptr, arg);\n            if (\"change\" != name) return;\n            if (ptr.event.old == el.value) return;\n            ptr.event.value = el.value;\n            helper.event.call(el, \"liveinput\", ptr.event);\n        };\n        var onkeyup = function(e, el, data, cursor, events, ptr) {\n            cursor.release();\n            if (8 == e.keyCode) {\n                data.before = el.value.substring(0, cursor.end);\n                data.diff = \"\";\n                data.after = el.value.substring(cursor.end);\n            } else {\n                data.before = el.value.substring(0, cursor.start);\n                data.diff = el.value.substring(cursor.start, cursor.end);\n                data.after = el.value.substring(cursor.end);\n            }\n            if (e.ctrlKey && hotkeymap.control[e.keyCode]) data.diff += hotkeymap.control[e.keyCode];\n            data.result = preprocessor.pass({\n                before: helper.textToCodes(data.before),\n                diff: helper.textToCodes(data.diff),\n                after: helper.textToCodes(data.after),\n                offset: e.ctrlKey && -data.diff.length || 0\n            }, data);\n            data.result.value = data.result.before + data.result.diff + data.result.after;\n            data.result.value = postprocessor.pass(data.result.value, data);\n            callevents(el, events, \"change\", ptr, [ data.result.value, data.old, lang ]);\n            ptr.event.old = data.old = el.value;\n            cursor.move(data.result.offset);\n            data.keydown = [];\n            ptr.timer = null;\n            return true;\n        };\n        var refresh = function(el) {\n            if (!el.value.length) return;\n            var ptr = heap[el.GUID];\n            clearTimeout(ptr.timer);\n            if (!ptr.timer) ptr.cursor.refresh();\n            onkeyup({\n                keyCode: whitelist[0]\n            }, el, ptr.data, ptr.cursor, ptr.events, ptr);\n        };\n        var onkeydown = function(e, el, data, cursor, events, ptr) {\n            if (e.ctrlKey) switch (e.keyCode) {\n              case 90:\n              case 67:\n                return false;\n\n              case 89:\n                helper.preventDefault(e);\n                return false;\n            }\n            if (data.mousedown) {\n                helper.preventDefault(e);\n                return false;\n            }\n            if (helper.indexOf(whitelist, e.keyCode) == -1) {\n                if (ptr.timer) refresh(el);\n                return false;\n            }\n            clearTimeout(ptr.timer);\n            data.keydown.push({\n                keyCode: e.keyCode,\n                shiftKey: e.shiftKey,\n                ctrlKey: e.ctrlKey\n            });\n            if (!ptr.timer) cursor.press();\n            ptr.timer = setTimeout(function() {\n                onkeyup(data.keydown[data.keydown.length - 1], el, data, cursor, events, ptr);\n            }, interval);\n            if (e.ctrlKey && helper.indexOf(hotkey.control, e.keyCode) != -1) {\n                helper.preventDefault(e);\n                return false;\n            }\n            return true;\n        };\n        var bind = function(el) {\n            if (!el.GUID) el.GUID = helper.GUID();\n            var ptr = heap[el.GUID] = {};\n            ptr.el = el;\n            ptr.event = {\n                old: \"\"\n            };\n            ptr.data = {\n                keydown: [],\n                result: {},\n                old: \"\"\n            };\n            ptr.cursor = new Cursor(el);\n            var data = ptr.data;\n            var cursor = ptr.data.cursor = ptr.cursor;\n            var events = ptr.events = {};\n            ptr.keydown = function(e) {\n                onkeydown(e, el, data, cursor, events, ptr);\n            };\n            ptr.paste = function() {\n                data.keydown = [];\n                return true;\n            };\n            ptr.dragover = function(e) {\n                helper.preventDefault(e);\n                return false;\n            };\n            ptr.mousedown = function() {\n                ptr.data.mousedown = true;\n                refresh(el);\n            };\n            ptr.mouseup = function() {\n                ptr.data.mousedown = false;\n            };\n            ptr.mouseleave = function() {\n                ptr.data.mousedown = false;\n            };\n            ptr.blur = function() {\n                refresh(el);\n            };\n            helper.event.add(el, \"keydown\", ptr.keydown);\n            helper.event.add(el, \"paste\", ptr.paste);\n            helper.event.add(el, \"mousedown\", ptr.mousedown);\n            helper.event.add(el, \"mouseup\", ptr.mouseup);\n            helper.event.add(el, \"mouseleave\", ptr.mouseleave);\n            helper.event.add(el, \"dragover\", ptr.dragover);\n            helper.event.add(el, \"blur\", ptr.blur);\n        };\n        self.bind = function() {\n            for (var i = 0, l = arguments.length; i < l; i++) bind(arguments[i]);\n            return self;\n        };\n        self.unbind = function(el) {\n            if (!el.GUID || !heap[el.GUID]) return self;\n            var ptr = heap[el.GUID];\n            helper.event.remove(el, \"keydown\", ptr.keydown);\n            helper.event.remove(el, \"paste\", ptr.paste);\n            helper.event.remove(el, \"mousedown\", ptr.mousedown);\n            helper.event.remove(el, \"mouseup\", ptr.mouseup);\n            helper.event.remove(el, \"mouseleave\", ptr.mouseleave);\n            helper.event.remove(el, \"dragover\", ptr.dragover);\n            helper.event.remove(el, \"blur\", ptr.blur);\n            var events = ptr.events;\n            for (var name in events) {\n                events[name].length = 0;\n                delete events[name];\n            }\n            delete heap[el.GUID];\n            if (!helper.getOwnPropertyNames(heap).length) {\n                var key = JSON.stringify(config);\n                delete cache[key];\n            }\n            return self;\n        };\n        self.on = function(event, el, cb) {\n            if (!el.GUID || !heap[el.GUID]) return self;\n            heap[el.GUID].events[event] = heap[el.GUID].events[event] || [];\n            heap[el.GUID].events[event].push(cb);\n            switch (event) {\n              case \"change\":\n                if (el.value.length) refresh(el);\n            }\n            return self;\n        };\n        self.off = function(event, el, cb) {\n            if (!el.GUID || !heap[el.GUID]) return self;\n            eventIndex = helper.indexOf(heap[el.GUID].events[event], cb);\n            if (eventIndex == -1) return self;\n            heap[el.GUID].events[event].splice(eventIndex, 1);\n            return self;\n        };\n        return self;\n    };\n    var setLang = function(config) {\n        if (\"undefined\" == typeof config.lang) return;\n        var lang = config.lang;\n        for (var p in config) {\n            if (!config[p]) continue;\n            if (true == config[p]) config[p] = {};\n            config[p].lang = lang;\n        }\n    };\n    var mergeConfig = function(a, b) {\n        if (!b) return a;\n        for (var p in b) if (\"object\" == typeof a[p]) a[p] = mergeConfig(a[p], b[p]); else a[p] = b[p];\n        return a;\n    };\n    var init = function(name, options) {\n        if (\"object\" == typeof name || \"undefined\" == typeof name) {\n            options = name;\n            name = \"default\";\n        }\n        if (!types[name]) throw new Error(\"Can not find liveinput type \" + name);\n        return types[name](options);\n    };\n    var configuration = function(config) {\n        mergeConfig(types, config);\n        return self;\n    };\n    var cache = {};\n    var types = {\n        \"default\": function(options) {\n            var config = mergeConfig({\n                lang: \"\",\n                interval: 0,\n                layout: true,\n                include: {\n                    chars: true,\n                    numbers: true,\n                    symbols: true,\n                    special: \"\"\n                },\n                exclude: {\n                    special: \"{}[]\"\n                },\n                input: {\n                    register: \"\",\n                    capslock: false\n                },\n                regexulator: {\n                    g: {}\n                }\n            }, options);\n            setLang(config);\n            var key = JSON.stringify(config);\n            var instance = cache[key] || (cache[key] = new LiveInput(config));\n            return instance;\n        },\n        fio: function(options) {\n            var special = \" '-\";\n            var config = mergeConfig({\n                lang: \"ru\",\n                include: {\n                    numbers: false,\n                    symbols: false,\n                    special: special\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": special,\n                        \"after-char-upper-char\": [ \"'\", \"\" ],\n                        \"after-chars-remove-chars\": {\n                            \"\": special\n                        }\n                    }\n                }\n            }, options);\n            return init(config);\n        },\n        numeric: function(options) {\n            var config = mergeConfig({\n                include: {\n                    chars: false,\n                    numbers: true,\n                    symbols: false,\n                    special: \"\"\n                }\n            }, options);\n            return init(config);\n        },\n        place: function(options) {\n            var special = \". '-\";\n            var config = mergeConfig({\n                lang: \"ru\",\n                include: {\n                    numbers: false,\n                    symbols: false,\n                    special: special\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": special,\n                        \"after-char-upper-char\": [ \"'\", \"\" ],\n                        \"after-chars-remove-chars\": {\n                            \"\": special\n                        }\n                    }\n                }\n            }, options);\n            return init(config);\n        },\n        \"peopled-place\": function(options) {\n            var config = mergeConfig({\n                include: {\n                    numbers: true\n                }\n            }, options);\n            return init(\"place\", config);\n        },\n        address: function(options) {\n            var special = \"-/\";\n            var config = mergeConfig({\n                include: {\n                    symbols: false,\n                    special: special\n                },\n                input: {\n                    register: \"upper\",\n                    capslock: true\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": special,\n                        \"after-chars-remove-chars\": {\n                            \"\": special\n                        }\n                    }\n                }\n            }, options);\n            return init(config);\n        },\n        month: function(options) {\n            var config = mergeConfig({\n                lang: \"ru\",\n                interval: 700,\n                include: {\n                    numbers: true,\n                    symbols: false\n                },\n                input: {\n                    capslock: false\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": \"0\",\n                        \"after-char-upper-char\": \"\"\n                    }\n                }\n            }, options);\n            return init(config);\n        },\n        \"passport-issue\": function(options) {\n            var special = '. -\"№';\n            var config = mergeConfig({\n                lang: \"ru\",\n                include: {\n                    numbers: false,\n                    symbols: false,\n                    special: special\n                },\n                input: {\n                    capslock: true\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": special,\n                        \"after-chars-remove-chars\": {\n                            \"\": special\n                        }\n                    }\n                }\n            }, options);\n            return init(config);\n        },\n        \"international-passport-issue\": function(options) {\n            var special = \" -\";\n            var config = mergeConfig({\n                lang: \"\",\n                include: {\n                    numbers: false,\n                    symbols: false,\n                    special: special\n                },\n                input: {\n                    capslock: true\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": special,\n                        \"after-chars-remove-chars\": {\n                            \"\": special\n                        }\n                    }\n                }\n            }, options);\n            return init(config);\n        },\n        \"international-document-serial\": function(options) {\n            var config = mergeConfig({\n                lang: \"\",\n                include: {\n                    numbers: true,\n                    symbols: false\n                }\n            }, options);\n            return init(config);\n        },\n        \"document-issue\": function(options) {\n            var special = \" .,-/\\\"()№'\";\n            var config = mergeConfig({\n                lang: \"ru\",\n                include: {\n                    numbers: true,\n                    symbols: false,\n                    special: special\n                },\n                input: {\n                    register: \"lower\",\n                    capslock: true\n                },\n                regexulator: {\n                    g: {\n                        \"after-char-remove-repeat\": special,\n                        \"after-chars-remove-chars\": {\n                            \"\": special\n                        }\n                    }\n                }\n            }, options);\n            return init(config);\n        }\n    };\n    return {\n        init: init,\n        configuration: configuration\n    };\n}();\n\nif (\"undefined\" != typeof module) module.exports = liveinput; else if (window) window.liveinput = liveinput;"],"sourceRoot":"/source/"}